<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2012. The Genome Analysis Centre, Norwich, UK
  ~ MISO project contacts: Robert Davey @ TGAC
  ~ **********************************************************************
  ~
  ~ This file is part of MISO.
  ~
  ~ MISO is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ MISO is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with MISO. If not, see <http://www.gnu.org/licenses/>.
  ~
  ~ **********************************************************************
-->

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:security="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans 
                      http://www.springframework.org/schema/beans/spring-beans.xsd
                      http://www.springframework.org/schema/security 
                      http://www.springframework.org/schema/security/spring-security.xsd"
  default-autowire="byName">

  <bean id="securityManager" name="securityManager" class="com.eaglegenomics.simlims.core.manager.LocalSecurityManager" />

  <security:global-method-security secured-annotations="enabled" />

  <!-- don't want to have a SS filter here as the userless REST auth should have taken care of that -->
  <security:http pattern="/miso/rest/**" security="none" />

  <security:http pattern="/styles/**" security="none" /><!-- filters="none"/> -->
  <security:http pattern="/scripts/**" security="none" /><!-- filters="none"/> -->
  <security:http pattern="/images/**" security="none" /><!-- filters="none"/> -->

  <security:http use-expressions="true" auto-config="false" entry-point-ref="loginUrlAuthenticationEntryPoint">

    <security:access-denied-handler error-page="/miso/accessDenied"/>
    <security:csrf disabled="true" />

    <security:custom-filter position="FORM_LOGIN_FILTER" ref="jdbcAuthFilter" />
    <security:remember-me data-source-ref="dataSource" user-service-ref="jdbcUserAuthService" remember-me-parameter="_spring_security_remember_me" />

    <security:logout logout-success-url="/miso/login" />

    <security:intercept-url pattern="/miso/login" access="permitAll" />
    <security:intercept-url pattern="/miso/accessDenied" access="permitAll" />
    <security:intercept-url pattern="/miso/error" access="permitAll" />

    <security:intercept-url pattern="/miso/constants.js" access="permitAll" />
    <security:intercept-url pattern="/miso/admin/**" access="hasRole('ROLE_ADMIN')" />
    <security:intercept-url pattern="/miso/mainMenu" access="hasRole('ROLE_INTERNAL') or hasRole('ROLE_EXTERNAL')" />

    <security:intercept-url pattern="/miso/**" access="hasRole('ROLE_INTERNAL') or hasRole('ROLE_EXTERNAL')" />

    <security:session-management invalid-session-url="/miso/login" session-fixation-protection="none" />
  </security:http>

  <bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />

  <bean id="sas" class="org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy">
    <constructor-arg>
      <list>
        <bean class="org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy">
          <constructor-arg ref="sessionRegistry"/>
        </bean>
        <bean class="org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy"/>
        <bean class="org.springframework.security.web.authentication.session.RegisterSessionAuthenticationStrategy">
          <constructor-arg ref="sessionRegistry"/>
        </bean>
      </list>
    </constructor-arg>
  </bean>

  <bean id="httpSessionSecurityContextRepository" class="org.springframework.security.web.context.HttpSessionSecurityContextRepository" />

  <security:authentication-manager alias="authenticationManager">
    <security:authentication-provider user-service-ref="jdbcUserAuthService">
      <security:password-encoder ref="passwordEncoder" />
    </security:authentication-provider>
  </security:authentication-manager>

  <bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" />

  <bean id="passwordCodecService" class="uk.ac.bbsrc.tgac.miso.core.security.ShaPasswordCodecService">
    <property name="encoder" ref="passwordEncoder" />
  </bean>

  <bean id="loginUrlAuthenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
    <constructor-arg value="/miso/login" />
  </bean>

  <bean id="jdbcAuthFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
    <property name="allowSessionCreation" value="true" />
    <property name="sessionAuthenticationStrategy" ref="sas" />
    <property name="authenticationManager" ref="authenticationManager" />
    <property name="authenticationFailureHandler" ref="failureHandler" />
    <property name="authenticationSuccessHandler" ref="successHandler" />
  </bean>

  <bean id="successHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
    <property name="useReferer" value="true" />
 </bean>

  <bean id="failureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
    <property name="defaultFailureUrl" value="/miso/login?login_error=1" />
  </bean>

  <bean id="jdbcUserAuthService" class="uk.ac.bbsrc.tgac.miso.sqlstore.manager.MisoJdbcUserDetailsManager">
    <property name="usersByUsernameQuery" value="${security.jdbc.usersByUsernameQuery}" />
    <property name="authoritiesByUsernameQuery" value="${security.jdbc.authoritiesByUsernameQuery}" />
    <property name="rolePrefix" value="${security.jdbc.rolePrefix}" />
    <property name="enableAuthorities" value="${security.jdbc.enableAuthorities}" />
    <property name="jdbcTemplate" ref="interfaceTemplate" />
  </bean>

  <bean id="restSignatureFilter" class="uk.ac.bbsrc.tgac.miso.webapp.context.RestSignatureFilter">
    <constructor-arg ref="httpSessionSecurityContextRepository" />
  </bean>

  <bean id="exposeRequestUrlFilter" class="uk.ac.bbsrc.tgac.miso.webapp.context.ExposeRequestUrlFilter">
    <constructor-arg ref="httpSessionSecurityContextRepository" />
    <property name="applicationContextProvider" ref="applicationContextProvider" />
  </bean>
</beans>
