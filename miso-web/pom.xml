<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2017. Earlham Institute, Norwich, UK, and
  ~ the Ontario Institute for Cancer Research, Ontario, Canada. 
  ~ MISO project contacts: Robert Davey @ EI (formerly TGAC), 
  ~ Morgan Taschuk @ OICR 
  ~
  ~ **********************************************************************
  ~
  ~ This file is part of MISO.
  ~
  ~ MISO is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ MISO is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with MISO. If not, see <http://www.gnu.org/licenses />.
  ~
  ~ **********************************************************************
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>miso</artifactId>
    <groupId>uk.ac.bbsrc.tgac.miso</groupId>
    <version>0.2.85-SNAPSHOT</version>
  </parent>
  <artifactId>miso-web</artifactId>
  <packaging>war</packaging>
  <name>MISO MVC</name>
  <properties>
    <skipITs>true</skipITs>
    <cargoInitGoal>start</cargoInitGoal>
  </properties>
  <dependencies>
    <dependency>
      <groupId>aopalliance</groupId>
      <artifactId>aopalliance</artifactId>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.lowagie</groupId>
      <artifactId>itext</artifactId>
    </dependency>
    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-client</artifactId>
    </dependency>
    <dependency>
      <groupId>com.sun.jersey.contribs</groupId>
      <artifactId>jersey-apache-client</artifactId>
    </dependency>
    <dependency>
      <groupId>com.sun.jersey.contribs.jersey-oauth</groupId>
      <artifactId>oauth-client</artifactId>
    </dependency>
    <dependency>
      <groupId>com.sun.jersey.contribs.jersey-oauth</groupId>
      <artifactId>oauth-signature</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-httpclient</groupId>
      <artifactId>commons-httpclient</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
    </dependency>
    <dependency>
      <groupId>io.prometheus</groupId>
      <artifactId>simpleclient</artifactId>
    </dependency>
    <dependency>
      <groupId>io.prometheus</groupId>
      <artifactId>simpleclient_hotspot</artifactId>
    </dependency>
    <dependency>
      <groupId>io.prometheus</groupId>
      <artifactId>simpleclient_servlet</artifactId>
    </dependency>
    <dependency>
      <groupId>io.prometheus</groupId>
      <artifactId>simpleclient_hibernate</artifactId>
    </dependency>
    <dependency>
      <groupId>io.prometheus.jmx</groupId>
      <artifactId>collector</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.servlet.jsp</groupId>
      <artifactId>javax.servlet.jsp-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.ws.rs</groupId>
      <artifactId>jsr311-api</artifactId>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
    </dependency>
    <dependency>
      <groupId>net.sf.json-lib</groupId>
      <artifactId>json-lib</artifactId>
      <classifier>jdk15</classifier>
    </dependency>
    <dependency>
      <groupId>net.sourceforge.fluxion</groupId>
      <artifactId>fluxion-spi</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi-ooxml</artifactId>
      <exclusions>
        <exclusion>
          <artifactId>stax-api</artifactId>
          <groupId>stax</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjweaver</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>
    <dependency>
      <groupId>io.github.bonigarcia</groupId>
      <artifactId>webdrivermanager</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jdom</groupId>
      <artifactId>jdom</artifactId>
    </dependency>
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-java</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.integration</groupId>
      <artifactId>spring-integration-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-config</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-ldap</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-taglibs</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-web</artifactId>
      <exclusions>
        <exclusion>
          <artifactId>spring-aop</artifactId>
          <groupId>org.springframework</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>uk.ac.bbsrc.tgac.miso</groupId>
      <artifactId>core</artifactId>
    </dependency>
    <dependency>
      <groupId>uk.ac.bbsrc.tgac.miso</groupId>
      <artifactId>integration-tools</artifactId>
    </dependency>
    <dependency>
      <groupId>uk.ac.bbsrc.tgac.miso</groupId>
      <artifactId>miso-dto</artifactId>
    </dependency>
    <dependency>
      <groupId>uk.ac.bbsrc.tgac.miso</groupId>
      <artifactId>miso-service</artifactId>
    </dependency>
    <dependency>
      <groupId>uk.ac.bbsrc.tgac.miso</groupId>
      <artifactId>spring</artifactId>
      <exclusions>
        <exclusion>
          <artifactId>stax-api</artifactId>
          <groupId>stax</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>uk.ac.bbsrc.tgac.miso</groupId>
      <artifactId>sqlstore</artifactId>
    </dependency>
    <dependency>
      <groupId>uk.ac.tgac.fluxion.ajax</groupId>
      <artifactId>fluxion-ajax-3</artifactId>
    </dependency>
    <dependency>
      <!-- Do not remove - used by container -->
      <groupId>xml-apis</groupId>
      <artifactId>xml-apis</artifactId>
    </dependency>
  </dependencies>
  <build>
    <finalName>ROOT</finalName>
    <plugins>
      <plugin>
        <groupId>com.samaxes.maven</groupId>
        <artifactId>minify-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>default-minify</id>
            <goals>
              <goal>minify</goal>
            </goals>
            <configuration>
              <charset>UTF-8</charset>
              <cssSourceDir>styles</cssSourceDir>
              <cssSourceIncludes>
                <cssSourceInclude>*.css</cssSourceInclude>
              </cssSourceIncludes>
              <cssFinalFile>style.css</cssFinalFile>
              <jsSourceDir>scripts</jsSourceDir>
              <jsSourceFiles>
                <jsSourceFile>lims.js</jsSourceFile>
                <jsSourceFile>search.js</jsSourceFile>
                <jsSourceFile>experiment_ajax.js</jsSourceFile>
                <jsSourceFile>library_ajax.js</jsSourceFile>
                <jsSourceFile>pool_ajax.js</jsSourceFile>
                <jsSourceFile>project_ajax.js</jsSourceFile>
                <jsSourceFile>reporting_ajax.js</jsSourceFile>
                <jsSourceFile>run_ajax.js</jsSourceFile>
                <jsSourceFile>sample_ajax.js</jsSourceFile>
                <jsSourceFile>sequencer_partition_container_ajax.js</jsSourceFile>
                <jsSourceFile>sequencer_reference_ajax.js</jsSourceFile>
                <jsSourceFile>study_ajax.js</jsSourceFile>
                <jsSourceFile>parsley_form_validations.js</jsSourceFile>
                <jsSourceFile>multi_select_drag_drop.js</jsSourceFile>
                <jsSourceFile>menus.js</jsSourceFile>
                <jsSourceFile>jquery/datatables/js/jquery.dataTables.min.js</jsSourceFile>
                <jsSourceFile>datatables_utils.js</jsSourceFile>
              </jsSourceFiles>
              <jsSourceIncludes>
                <jsSourceInclude>*.js</jsSourceInclude>
              </jsSourceIncludes>
              <jsSourceExcludes>
                <jsSourceExclude>natural_sort.js</jsSourceExclude>
                <jsSourceExclude>xregexp-all-min.js</jsSourceExclude>
                <jsSourceExclude>runCalendar.js</jsSourceExclude>
              </jsSourceExcludes>
              <jsFinalFile>header_script.js</jsFinalFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>sql</id>
      <activation>
        <property>
          <name>database</name>
          <value>sql</value>
        </property>
      </activation>
      <build>
        <resources>
          <resource>
            <filtering>true</filtering>
            <directory>src/main/resources</directory>
          </resource>
        </resources>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
      <properties>
        <spring-version>3.2.16.RELEASE</spring-version>
      </properties>
    </profile>
    <profile>
      <id>external</id>
      <activation>
        <property>
          <name>release</name>
          <value>external</value>
        </property>
      </activation>
      <build>
        <resources>
          <resource>
            <filtering>true</filtering>
            <directory>src/main/resources/external</directory>
            <includes>
              <include>miso.properties</include>
            </includes>
            <excludes>
              <exclude>../internal/*</exclude>
            </excludes>
          </resource>
          <resource>
            <filtering>true</filtering>
            <directory>src/main/resources</directory>
            <includes>
              <include>fluxion/</include>
              <include>status/</include>
            </includes>
            <excludes>
              <exclude>../internal/*</exclude>
              <exclude>../external/*</exclude>
            </excludes>
          </resource>
        </resources>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <configuration>
              <webResources>
                <resource>
                  <directory>src/main/resources</directory>
                  <targetPath>WEB-INF/classes</targetPath>
                  <filtering>true</filtering>
                  <excludes>
                    <exclude>internal/*</exclude>
                    <exclude>external/*</exclude>
                  </excludes>
                </resource>
              </webResources>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>integration-test-setup</id>
      <activation>
        <property>
          <!-- activate when integration tests are enabled -->
          <name>skipITs</name>
          <value>false</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <!-- separate integration test sources/resources from unit tests -->
	        <groupId>org.codehaus.mojo</groupId>
	        <artifactId>build-helper-maven-plugin</artifactId>
	        <executions>
	          <execution>
	            <id>add-it-sources</id>
	            <phase>generate-test-sources</phase>
	            <goals>
	              <goal>add-test-source</goal>
	            </goals>
	            <configuration>
	              <sources>
	                <source>src/it/java</source>
	              </sources>
	            </configuration>
	          </execution>
	          <execution>
	            <id>add-it-resources</id>
	            <phase>generate-test-resources</phase>
	            <goals>
	              <goal>add-test-resource</goal>
	            </goals>
	            <configuration>
	              <resources>
	                <resource>
	                  <filtering>true</filtering>
	                  <directory>src/it/resources</directory>
	                </resource>
	              </resources>
	            </configuration>
	          </execution>
	          <!-- Reserve ports for Tomcat and H2 -->
	          <execution>
	            <id>reserve-network-port</id>
                <phase>pre-integration-test</phase>
	            <goals>
	              <goal>reserve-network-port</goal>
	            </goals>
	            <configuration>
	              <portNames>
	                <portName>miso.it.tomcat.servlet.port</portName>
                    <portName>miso.it.tomcat.ajp.port</portName>
                    <portName>miso.it.h2.port</portName>
	              </portNames>
	            </configuration>
	          </execution>
	        </executions>
	      </plugin>
	      <plugin>
	        <!-- copy Flyway migrations from sqlstore -->
	        <groupId>org.apache.maven.plugins</groupId>
	        <artifactId>maven-dependency-plugin</artifactId>
	        <executions>
	          <execution>
	            <id>copy-sqlstore-scripts</id>
	            <phase>generate-test-resources</phase>
	            <goals>
	              <goal>unpack</goal>
	            </goals>
	            <configuration>
	              <artifactItems>
	                <artifactItem>
	                  <groupId>uk.ac.bbsrc.tgac.miso</groupId>
	                  <artifactId>sqlstore</artifactId>
	                  <outputDirectory>target/test-classes/sqlstore</outputDirectory>
	                  <includes>db/**</includes>
	                </artifactItem>
	              </artifactItems>
	            </configuration>
	          </execution>
	        </executions>
	      </plugin>
	      <plugin>
	        <!-- translate Flyway migrations to work in H2 -->
	        <groupId>org.codehaus.gmaven</groupId>
	        <artifactId>groovy-maven-plugin</artifactId>
	        <executions>
	          <execution>
	            <id>translate-schema</id>
	            <phase>generate-test-resources</phase>
	            <goals>
	              <goal>execute</goal>
	            </goals>
	            <configuration>
	              <source>${project.basedir}/src/it/resources/db/scripts/schema_translator.groovy</source>
	            </configuration>
	          </execution>
	        </executions>
	      </plugin>
	      <plugin>
	        <!-- create H2 in-memory DB, accessible via TCP -->
	        <groupId>net.xeric.maven</groupId>
	        <artifactId>h2-maven-plugin</artifactId>
	        <configuration>
	          <args>
	            <arg>-tcp</arg>
	            <arg>-tcpAllowOthers</arg>
	            <arg>-tcpPort</arg>
	            <arg>${miso.it.h2.port}</arg>
	          </args>
	        </configuration>
	        <executions>
	          <execution>
	            <id>start-h2-tcp</id>
	            <phase>pre-integration-test</phase>
	            <goals>
	              <goal>h2-start</goal>
	            </goals>
	          </execution>
	          <execution>
	            <id>stop-h2-tcp</id>
	            <phase>post-integration-test</phase>
	            <goals>
	              <goal>h2-stop</goal>
	            </goals>
	          </execution>
	        </executions>
	      </plugin>
	      <plugin>
	        <!-- populate DB -->
	        <groupId>org.flywaydb</groupId>
	        <artifactId>flyway-maven-plugin</artifactId>
	        <executions>
	          <execution>
	            <id>integration-test-db</id>
	            <phase>pre-integration-test</phase>
	            <goals>
	              <goal>clean</goal>
	              <goal>migrate</goal>
	            </goals>
	          </execution>
	        </executions>
	        <configuration>
	          <url>jdbc:h2:tcp://localhost:${miso.it.h2.port}/mem:miso-it;mode=mysql;DB_CLOSE_DELAY=-1;INIT=CREATE SCHEMA IF NOT EXISTS "public";</url>
	          <locations>
                <location>classpath:uk.ac.bbsrc.tgac.miso.db.migration</location>
                <location>classpath:db/migration</location>
              </locations>
	          <sqlMigrationSuffix>.test.sql</sqlMigrationSuffix>
	        </configuration>
	      </plugin>
	      <plugin>
	        <!-- launch standalone Tomcat server and deploy MISO -->
	        <groupId>org.codehaus.cargo</groupId>
	        <artifactId>cargo-maven2-plugin</artifactId>
	        <executions>
              <execution>
                <id>start-container</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <!-- 'start' by default. Specify 'run' to keep Tomcat running until stopped manually -->
                  <goal>${cargoInitGoal}</goal>
                </goals>
              </execution>
	          <execution>
	            <id>stop-container</id>
	            <phase>post-integration-test</phase>
	            <goals>
	              <goal>stop</goal>
	            </goals>
	          </execution>
	        </executions>
	        <configuration>
	          <container>
	            <containerId>tomcat8x</containerId>
	            <artifactInstaller>
	              <groupId>org.apache.tomcat</groupId>
	              <artifactId>tomcat</artifactId>
	              <version>8.0.44</version>
	            </artifactInstaller>
	            <systemProperties>
	              <security.method>jdbc</security.method>
	            </systemProperties>
	            <dependencies>
	              <dependency>
	                <groupId>com.h2database</groupId>
	                <artifactId>h2</artifactId>
	              </dependency>
	            </dependencies>
	          </container>
	          <configuration>
	            <type>standalone</type>
	            <home>${project.build.directory}/tomcat8</home>
	            <properties>
	              <cargo.servlet.port>${miso.it.tomcat.servlet.port}</cargo.servlet.port>
                  <cargo.tomcat.ajp.port>${miso.it.tomcat.ajp.port}</cargo.tomcat.ajp.port>
	            </properties>
	            <configfiles>
	              <configfile>
	                <file>${project.build.directory}/test-classes/tomcat-config/</file>
	                <todir>conf/Catalina/localhost</todir>
	              </configfile>
	            </configfiles>
	            <datasources>
	              <datasource>
	                <jndiName>jdbc/MISODB</jndiName>
	                <connectionType>javax.sql.Datasource</connectionType>
	                <driverClass>org.h2.Driver</driverClass>
	                <url>jdbc:h2:tcp://localhost:${miso.it.h2.port}/mem:miso-it;mode=mysql;DB_CLOSE_DELAY=-1;INIT=CREATE SCHEMA IF NOT EXISTS "public";</url>
	              </datasource>
	            </datasources>
	          </configuration>
	        </configuration>
	      </plugin>
	      <!-- run integration tests -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <systemPropertyVariables>
                <!-- Make URLs available for tests -->
                <miso.it.baseUrl>http://localhost:${miso.it.tomcat.servlet.port}/</miso.it.baseUrl>
                <miso.it.h2.url>jdbc:h2:tcp://localhost:${miso.it.h2.port}/mem:miso-it;mode=mysql;DB_CLOSE_DELAY=-1;</miso.it.h2.url>
              </systemPropertyVariables>
              <skipTests>${skipITs}</skipTests>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
