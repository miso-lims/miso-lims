<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>uk.ac.bbsrc.tgac.miso</groupId>
    <artifactId>miso</artifactId>
    <version>1.51.2-SNAPSHOT</version>
  </parent>
  <artifactId>pinery-miso</artifactId>
  <name>pinery-miso</name>
  <packaging>war</packaging>

  <properties>
    <failOnMissingWebXml>false</failOnMissingWebXml>
    <skipITs>true</skipITs>
    <mysql.db>lims</mysql.db>
    <mysql.user>tgaclims</mysql.user>
    <mysql.pw>tgaclims</mysql.pw>
    <pinery.version>2.23.0</pinery.version>
    <spring-version>5.3.20</spring-version><!-- must match version used by Pinery -->
  </properties>

  <dependencies>
    <dependency>
      <!-- Overlay -->
      <groupId>ca.on.oicr</groupId>
      <artifactId>pinery-ws</artifactId>
      <version>${pinery.version}</version>
      <type>war</type>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>ca.on.oicr</groupId>
      <artifactId>pinery-api</artifactId>
      <version>${pinery.version}</version>
    </dependency>
    <dependency>
      <groupId>ca.on.oicr</groupId>
      <artifactId>pinery-lims</artifactId>
      <version>${pinery.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>uk.ac.bbsrc.tgac.miso</groupId>
      <artifactId>sqlstore</artifactId>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <id>integration-test-setup</id>
      <activation>
        <property>
          <!-- activate when integration tests are enabled -->
          <name>skipITs</name>
          <value>false</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <!-- separate integration test sources/resources from unit tests -->
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>add-it-sources</id>
                <phase>generate-test-sources</phase>
                <goals>
                  <goal>add-test-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>src/it/java</source>
                  </sources>
                </configuration>
              </execution>
              <execution>
                <id>add-it-resources</id>
                <phase>generate-test-resources</phase>
                <goals>
                  <goal>add-test-resource</goal>
                </goals>
                <configuration>
                  <resources>
                    <resource>
                      <filtering>true</filtering>
                      <directory>src/it/resources</directory>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <!-- copy Flyway migrations from sqlstore -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-sqlstore-scripts</id>
                <phase>generate-test-resources</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>uk.ac.bbsrc.tgac.miso</groupId>
                      <artifactId>sqlstore</artifactId>
                      <outputDirectory>target/test-classes/sqlstore</outputDirectory>
                      <includes>db/**</includes>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <!-- translate Flyway migrations -->
            <groupId>org.codehaus.gmaven</groupId>
            <artifactId>groovy-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>translate-schema</id>
                <phase>generate-test-resources</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <source>${project.basedir}/src/it/resources/db/scripts/schema_translator.groovy</source>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>0.21.0</version>
            <configuration>
            <removeVolumes>true</removeVolumes>
              <images>
                <image>
                  <name>mysql:5.7</name>
                  <alias>mysql</alias>
                  <run>
                    <env>
                      <MYSQL_ROOT_PASSWORD>abc123</MYSQL_ROOT_PASSWORD>
                      <MYSQL_USER>${mysql.user}</MYSQL_USER>
                      <MYSQL_PASSWORD>${mysql.pw}</MYSQL_PASSWORD>
                      <MYSQL_DATABASE>${mysql.db}</MYSQL_DATABASE>
                    </env>
                    <ports>
                      <port>mysql.port:3306</port>
                    </ports>
                    <wait>
                      <time>30000</time>
                    </wait>
                  </run>
                </image>
              </images>
            </configuration>
            <executions>
              <execution>
                <id>start</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>stop</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <!-- populate DB -->
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>integration-test-db</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>clean</goal>
                  <goal>migrate</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <url>jdbc:mysql://localhost:${mysql.port}/${mysql.db}?autoReconnect=true&amp;useSSL=false</url>
              <user>${mysql.user}</user>
              <password>${mysql.pw}</password>
              <locations>
                <location>classpath:uk.ac.bbsrc.tgac.miso.db.migration</location>
                <location>filesystem:target/test-classes/db/migration</location>
              </locations>
              <sqlMigrationSuffix>.test.sql</sqlMigrationSuffix>
              <placeholders>
                <filesDir>/storage/miso/files/</filesDir>
              </placeholders>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <systemPropertyVariables>
                <!-- Make URLs available for tests -->
                <miso.it.mysql.url>jdbc:mysql://localhost:${mysql.port}/${mysql.db}?autoReconnect=true&amp;useSSL=false</miso.it.mysql.url>
                <miso.it.mysql.user>${mysql.user}</miso.it.mysql.user>
                <miso.it.mysql.pw>${mysql.pw}</miso.it.mysql.pw>
              </systemPropertyVariables>
              <skipTests>${skipITs}</skipTests>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- Waiting for port doesn't work on Mac -->
      <id>not-mac</id>
      <activation>
        <os>
          <family>!mac</family>
        </os>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <configuration>
              <images>
                <image>
                  <name>mysql:5.7</name>
                  <alias>mysql</alias>
                  <run>
                    <wait>
                      <tcp>
                        <ports>
                          <port>3306</port>
                        </ports>
                      </tcp>
                    </wait>
                  </run>
                </image>
              </images>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
