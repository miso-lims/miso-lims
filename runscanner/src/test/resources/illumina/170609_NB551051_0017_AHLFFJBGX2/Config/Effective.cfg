[System]				;Specifies global configuration settings for the instrument.
PreHeatCameraModules = True				;Pre-heat the read heads before sequencing
PreheatCameraModuleDelayBetweenSnapsMs = 1500				;Delay between taking pairs of red/green images
MaximumNumberOfDiagnosticLogs = 20				;The maximum number of diagnostic logs to retain in the application log folder
MaximumNumberOfPreRunFolders = 20				;The maximum number of pre run folders to retain in the root pre run folder
RebootEvenIfInSimulation = False				;Reboots the compter(SBC) even if the instrument is simulated.
MaximumDaysBetweenWashes = 14				;The maximum days a machine can go before it needs a wash before sequencing.
MaximumDryDaysBetweenWashes = 7				;The maximum days a machine can go in the dry state before it needs a wash.
AlertIntervalAfterSuccessfulPreRunChecks = 120				;The amount in seconds until an alert sound plays after PreRun checks have successfully finished but the operator has not pressed Next to start a run.
Location = Field				;The current manufacturing location of the instrument
SystemTypeGroup = FullInstrument				;An identifier that is used to group multiple "like" system types together. System types that are essentially the same but can be chosen between based on certain criteria (e.g., hardware rev) should share the same value for this parameter.
VeriSeqNumberOfRead1Cycles = 36				;The number of Read 1 cycles in the VeriSeq workflow.
VeriSeqNumberOfIndex1Cycles = 8				;The number of Index 1 cycles in the VeriSeq workflow.
VeriSeqNumberOfIndex2Cycles = 8				;The number of Index 2 cycles in the VeriSeq workflow.
InitializeAllInSerial = False				;Indicates whether or not to initialize all devices in serial. Setting this to true will result in slower initialization performance but will help diagnose device initialization issues.
ReportDeviceSections = True				;Indicates something.
MaintenanceLogsFolder = D:\Illumina Maintenance Logs				;MaintenanceLogsFolder
SecondaryMaintenanceLogsFolder = 				;Secondary Maintenance Logs Folder (e.g. Network location) to copy results to
ILMNOnlyRecipeFolder = D:\ILMNOnlyRecipeFolder\				;
SimulationImagesPath = 				;Folder containing simulation images
UseMinimumSimulationImages = False				;Use only camera 1, lane 1, swath 1, tile 1, top surface image (but multiple Z positions for focus)
FPGAFlashDefaultFolder = D:\				;Directory for FPGA flash / firmware files.
TempDirectoryDeletionAgeDays = 7				;Age allowed for temporary run folders.  Run folders in the Temporary Folder older than this age will be deleted.
ScanCounterFile = D:\ScanCounter.txt				;The folder and file name for keeping track of the number of runs started.  Delete this file and the counts starts over.
InstrumentName = NB551051				;Indicates the name of the instrument.
DefaultFlowcell = NextSeq 4x36				;
LogEstimatedCompletionTimeMetrics = True				;Specifies whether to log metrics related to Estimated Completion times. This could add a small amount of overhead when executing operations and should therefore not be enabled in a "production" setting.
DefaultTimeoutMs = 60000				;System wide timeout for devices
SystemType = Production_v2				;Indicates the type of system or instrument.
TraceIfNotSimulated = False				;Indicates whether or not to trace devices if not simulated.
FastSimulation = True				;Indicates whether or not to use fast simulation when simulating the instrument.
LogAllComms = False				;Log all device communications system wide.

[Sequencing]				;Sequencing channels
Channel1 = Red
Channel2 = Green
				;Sequencing Channels. Default is one green and one red channel.
ValveAndStaggerMode = ImageDuringChemistry				;Indicates the method to perform valve and stagger
FocusSaveFormat = Jpeg				;Format for saving focus files
JpegIntensityScaleFactor = 10				;When saving focus images as jpeg, set this to a non-zero value to get a fixed intensity scale factor instead of auto-contrast
FocusSaveOnlyRegionOfInterest = True				;Save full focus image or just region of interest
CompareFWAutoFocusToSWAutoFocus = False				;DMA focus image and check that result matches SW.  This triggers DMA'ing focus images in order to compare.
ComputeChromatismEachRun = True				;When creating the focus model, calculate chromatism also
ChromatismLimitUm = 0.005				;Limit computed chromatism to +/- this distance
AdjustFocusModelEveryNCycles = 1				;Adjust the focus model every N cycles
FindSurfaceAfterNFailures = 2				;If focus has failed for N tiles in a row during a cycle, stop scanning and re-find the surface
FindSurfaceAfterNCycleFailures = 2				;If focus has failed for a single tile N cycles in a row, stop scanning and re-find the surface
CheckForAutoFocusOutliers = True				;Implement algorithm to detect outliers during auto focus
ReadTemperatureEveryNTiles = 0				;Read all the temperature sensors every N tiles
AllowRehybRuns = True				;Specifies whether Rehyb runs are supported on flow cells that were previously used but not marked as complete.
AdjustIntensityEnabled = False				;Set to true to adjust the LED current percentages during sequencing using the associated settings.
AdjustIntensitySmallPercentChange = 1				;Small moves adjust LED current by this percentage
AdjustIntensityLargePercentChange = 5				;Large moves adjust LED current by this percentage
AdjustIntensityMaxIntensity = 3800				;If over this intensity, decrease by large percentage change
AdjustIntensityTargetIntensity = 3600				;Target intensity
AdjustIntensityTargetIntensityRange = 100				;Adjust by small percentage change if the intensity is not within target +/ range

[Channels]				;Specify the Type and number of channels.
Type = Channel				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 5				;Number of device instances in the array.

[Channel1]				;Settings for a channel
SensorIndex = 0				;Index of the camera sensor to use when scanning this channel
ExposureMS = 20				;Camera exposure time in ms
Gain = 1				;Camera gain setting
ChannelName = Focus Laser				;Channel name
ImageIndex = 2				;Specify the array index for this channel in the array of buffers
LedPath = 2				;The index of the LED to turn on when scanning this channel
NumberOfImages = 1				;Number of image to capture before doing software image post-processing
ShouldRotateImages = False				;Should the images for this channel be rotated.
CaptureMode = RegularCapture				;Capture mode sets some behaviors about the image capture.

[Channel2]				;Settings for a channel
SensorIndex = 0				;Index of the camera sensor to use when scanning this channel
ExposureMS = 200				;Camera exposure time in ms
Gain = 1				;Camera gain setting
ChannelName = Focus Green				;Channel name
ImageIndex = 1				;Specify the array index for this channel in the array of buffers
LedPath = 1				;The index of the LED to turn on when scanning this channel
NumberOfImages = 1				;Number of image to capture before doing software image post-processing
ShouldRotateImages = False				;Should the images for this channel be rotated.
CaptureMode = RegularCapture				;Capture mode sets some behaviors about the image capture.

[Channel3]				;Settings for a channel
SensorIndex = 0				;Index of the camera sensor to use when scanning this channel
ExposureMS = 200				;Camera exposure time in ms
Gain = 1				;Camera gain setting
ChannelName = Focus Red				;Channel name
ImageIndex = 0				;Specify the array index for this channel in the array of buffers
LedPath = 0				;The index of the LED to turn on when scanning this channel
NumberOfImages = 1				;Number of image to capture before doing software image post-processing
ShouldRotateImages = False				;Should the images for this channel be rotated.
CaptureMode = RegularCapture				;Capture mode sets some behaviors about the image capture.

[Channel4]				;Settings for a channel
SensorIndex = 0				;Index of the camera sensor to use when scanning this channel
ExposureMS = 200				;Camera exposure time in ms
Gain = 1				;Camera gain setting
ChannelName = Green				;Channel name
ImageIndex = 1				;Specify the array index for this channel in the array of buffers
LedPath = 1				;The index of the LED to turn on when scanning this channel
NumberOfImages = 8				;Number of image to capture before doing software image post-processing
ShouldRotateImages = True				;Should the images for this channel be rotated.
CaptureMode = RegularCapture				;Capture mode sets some behaviors about the image capture.

[Channel5]				;Settings for a channel
SensorIndex = 0				;Index of the camera sensor to use when scanning this channel
ExposureMS = 200				;Camera exposure time in ms
Gain = 1				;Camera gain setting
ChannelName = Red				;Channel name
ImageIndex = 0				;Specify the array index for this channel in the array of buffers
LedPath = 0				;The index of the LED to turn on when scanning this channel
NumberOfImages = 8				;Number of image to capture before doing software image post-processing
ShouldRotateImages = True				;Should the images for this channel be rotated.
CaptureMode = RegularCapture				;Capture mode sets some behaviors about the image capture.

[FocusParams]				;Focus parameters
FocusChannelToUse = Focus Laser				;Channel for focus images
ClusterChannelToUse = Focus Red				;Channel for cluster images
CoarseFocusNumSteps = 12				;Number of steps to use for coarse focus
CoarseFocusStepSizeMm = 0.006				;Size of each step during coarse focus
ThroughFocusNumSteps = 24				;Number of steps to use for through focus
ThroughFocusStepSizeMm = 0.002				;Size of each step during through focus
AutoFocusNumSteps = 18				;Number of steps to use for through focus
AutoFocusStepSize = 0.002				;Size of each step during through focus
AdjustFocusModelNumSteps = 7				;Number of images to take to adjust focus model
AdjustFocusModelStepSizeMm = 0.002				;Size of each step during through focus
AdjustFocusModelLimitMm = 0.0005				;Maximum adjustment up or down allowed
LEDCoarseFocusAdjacentTileCount = 5				;Use this many adjacent tiles when doing an LED coarse focus for focus model
UsePredictiveOptimization = True				;In Cycle 2 and later, predict the current Z position instead of using the last Z position for this tile
UsePiecewiseLinearFocusModel = True				;For the focus model, use a piece-wise linear regression instead of a polynomial
DoRenormalizeProfiles = False				;This was an experimental option to improve robustness; with Autocorrelation profiles it is unecessary because the profiles are naturally well normalized
ImageBottomSurfaceFirst = False				;If scanning top and bottom surfaces, scan the bottom surface first
NRowsForAutoFocusAnalysis = 0				;Number of rows to use for the autocorrelation profile of an autofocus image; 0 means use all rows
ColumnSampling = 16				;Sample every N columns in the image
FocusModelPolynomialOrder = 3				;If using a polynomial, use this order
SmoothProfileKernelSize = 5				;Apply N-pixel smoothing to a profile
FocusMirrorZOffset = 0				;Offset between tilt mirror image and direct image
LowSNRExposureTimeBoostFactor = 1.5				;If the image SNR is below the low or dark threshold, boost exposure by this much
LowSNRContrastThreshold = 2				;If the SNR is below this threshold, there is signal, but it is weak
DarkSampleContrastThreshold = 1				;If the SNR is below this threshold, there is no signal to work with
MaxAutoFocusExposureTimeMs = 1000				;When boosting the exposure, this is the maximum
TrustedRangeFloor = 0.004				;Minimum trusted range
TrustedRangeCeiling = 0.01				;Maximum trusted range
TrustedErrorThreshold = 0.0003				;Extend the trusted range outward until we hit a deviation from the model in excess of TrustedErrorThreshold
SkipAutoFocusNTiles = 0				;When conditions are right, skip focus on N tiles to speed up cycle time
SkipAutoFocusNoSkipCycles = 0				;Don't skip autofocusing on tiles for N cycles
SkipAutoFocusMaxZCorrection = 0.0005				;If the predicted correction is too big, suspend skipping autofocus for this cycle and 5 more
CoarseFocusSurfaceVerification = False				;During coarse focus, take an image of the other surface to confirm that we are on the correct surface
ThroughFocusMetric = Brenner				;Algorithm used to determine image quality.  Valid choices are: Brenner, Autocorrelation, Stddev
ThroughFocusReduceNumSteps = 24				;If using ThroughFocus as the DefaultFocusMethod, use fewer steps after the initial through focus
OpticsDepthOfField = 0.018				;This is the optical depth of field.  It is used in the SNR calculation to determine which images should be out-of-focus.
SNRStddevThreshold = 5				;This item is used in one of the SNR calculations.  The stddev of the out-of-focus images is multiplied by this threshold and compared to the IQ metric for the in-focus region
DistanceBetweenFlowcellSurfacesMm = 0.076				;Distance between flowcell surfaces in mm
FocusModelAnalysisAlgorithm = Project11				;Which algorithm to use to analyze the autofocus image
AFROITop = 616				;Auto Focus Region Of Interest top
AFROILeft = 940				;Auto Focus Region Of Interest left
AFROIWidth = 712				;Auto Focus Region Of Interest width
AFROIHeight = 712				;Auto Focus Region Of Interest height
AfterFocusModelGeneratedMinimizeROI = True				;After the focus model is generated, shrink the ROI used for auto focus
BackgroundStddevThresholdMultiplier = 40				;The spot intensity must be this multiplier above the background stddev
LaserSpotDepthOfFocusmMm = 0.2				;The laser focus spots are in focus over this range
ExpectedLinearRangeOFocusModelMm = 0.01				;The focus model is expected to be linear over this range
FocusModelFolder = d:\FocusModels				;Folder for saving last successfully generated focus model
FocusModelFolderForBeadchips = d:\FocusModels for Beadchips				;Folder for saving last successfully generated focus model
SaveImagesForDiagnosingProblems = True				;Save focus model images and focus problem images
MaxTilesToTryOnFocusModelFailure = 2				;Try N adjacent tiles on failure to generate focus model
MaxExtraDistanceBetweenFlowCellSurfaces = 0.015				;If the distance between surfaces is this much more than expected, then there is a bubble
FiducialAlternateExposureCount = 3				;Number of alternate (higher or lower) exposures to try
FiducialTargetBackgroundIntensity = 2500				;If a fiducial was not found, try taking another image if the background intensity is not near this target
FiducialTargetBackgroundIntensityRange = 500				;Don't take another fiducial image if background is within target +/- this range
NStepAutoFocusAttempts = 2				;Try autofocus this many times if outside of range
NStepAutoFocusRangeMm = 0.003				;If autofocus move is greater than this range, do the move and try autofocus again to get closer
UseFWAutoFocus = True				;Use FW autofocus instead of SW autofocus

[Flowcell]				;Configuration items for flow cell objects.
ActualXEdgeOfSlide = -0.062				;
ActualYEdgeOfSlide = 0.0825				;
Flowcell1XOffset = 0				;
Flowcell1YOffset = 0				;

[ConsumablesSensors]				;Configuration items for UI display of sensors.
DisplaySensor1 = False
DisplaySensor2 = False
DisplaySensor3 = False
DisplaySensor4 = False
DisplaySensor5 = False
DisplaySensor6 = False
DisplaySensor7 = False
DisplaySensor8 = False
DisplaySensor9 = False
DisplaySensor10 = False
DisplaySensor11 = False
DisplaySensor12 = True
DisplaySensor13 = False
DisplaySensor14 = False
DisplaySensor15 = False
DisplaySensor16 = False
DisplaySensor17 = True
DisplaySensor18 = True
DisplaySensor19 = False
DisplaySensor20 = False
DisplaySensor21 = False
DisplaySensor22 = False
DisplaySensor23 = False
DisplaySensor24 = False
DisplaySensor25 = True
DisplaySensor26 = True
DisplaySensor27 = True
DisplaySensor28 = True
DisplaySensor29 = False
DisplaySensor30 = False
DisplaySensor31 = False
				;Set to true to display the sensor in the UI.

[FluidicsSensors]				;Configuration items for UI display of sensors.
DisplaySensor1 = False
DisplaySensor2 = False
DisplaySensor3 = False
DisplaySensor4 = False
DisplaySensor5 = True
DisplaySensor6 = True
DisplaySensor7 = False
DisplaySensor8 = False
DisplaySensor9 = False
DisplaySensor10 = True
DisplaySensor11 = False
DisplaySensor12 = False
DisplaySensor13 = True
DisplaySensor14 = False
DisplaySensor15 = False
DisplaySensor16 = False
DisplaySensor17 = False
DisplaySensor18 = False
DisplaySensor19 = False
DisplaySensor20 = False
DisplaySensor21 = False
DisplaySensor22 = False
DisplaySensor23 = False
DisplaySensor24 = False
DisplaySensor25 = False
DisplaySensor26 = False
DisplaySensor27 = False
DisplaySensor28 = False
DisplaySensor29 = False
DisplaySensor30 = False
DisplaySensor31 = False
				;Set to true to display the sensor in the UI.

[ThermalTest]				;Thermal Test parameters
WaitTimeBetweenThroughFocusStacksInSeconds = 3				;Wait time in minutes in between through focus stacks.
AmbientHeatTimeWait1 = 3				;Wait time in minutes to heat the ambient system temperature to target T1.
AmbientHeatTimeWait2 = 2				;Wait time in minutes to heat the ambient system temperature to target T2.
AmbientCoolTimeWait = 2				;Wait time in minutes to cool to ambient system temperature to target T1.
FlowcellHeatToImageWait = 30				;Time in minutes to wait for flow cell to heat before imaging.
FlowcellMaxTempWait = 10				;Time in minutes to wait for flow cell to reach maximum temperature.
FlowcellCoolToImageWait = 30				;Time in minutes to wait for flow cell to cool before imaging.
FlowcellImageTemp = 60				;Flow cell image temperature in degrees Celsius.
FlowcellMaxTemp = 90				;Flow cell maximum temperature in degrees Celsius.
ImageLocationX = 0				;X position to perform image acquisition to generate heat
ImageLocationY = 9				;Y position to perform image acquisition to generate heat

[PreRunChecks]				;Pre-run Checks
SkipRequiredSoftwareCheck = False				;Skip the check for required software.
SkipNetworkConnectionCheck = False				;Skip the check network connection check.
SkipNetworkDiskSpaceCheck = False				;Skip the check for sufficient disk space at the Output Folder location.
SkipInstrumentDiskSpaceCheck = False				;Skip the check for sufficient disk space at the Run Folder location.
SkipConsumablesLoadedCheck = False				;Skip the check for all consumables properly loaded.
SkipBitErrorRateCheck = False				;Skip the Bit Error Rate check.
SkipZStepAndSettleCheck = False				;Skip the check for Z stage step-and-settle times.
SkipWasteBottleFullCheck = False				;Skip the check for the waste bottle not being full.
SkipDoorsClosedCheck = False				;Skip the check for all doors closed.
SkipBsmCheck = False				;Skip the BSM check.
SkipValveResponseCheck = False				;Skip the valve response check.
SkipFluidicsInitializationCheck = False				;Skip the check for the fluidics system being properly initialized.
SkipImagingLimitsCheck = False				;Skip the imaging limits check.
SkipTemperatureCheck = False				;Skip the check for proper temperature ramping.
SkipFlowCellRegistrationCheck = False				;Skip the flow cell registration test
SkipClipCheck = True				;Skip the objective clip check
SkipTempSensorsCheck = False				;Skip the temperature sensors check.
SkipFanCheck = False				;Skip the fan check.
SkipAutoCenterCheck = False				;Skip the auto center check.
SkipVerifyInputFilesCheck = False				;Skip the verify input files check.
TiltThetaXThresholdRadians = 0.003				;Threshold for tilt: +/-3.0um tilt per 1.5mm tile in X = 0.003 radians
TiltThetaYThresholdRadians = 0.004				;Threshold for tile: +/-3.0um tilt per 2mm tile in Y = 0.004 radians
SkewThetaZThresholdRadians = 0.0041				;Threshold for skew (theta Z)
FiducialExposureMs = 400				;Exposure for taking fiducial images
FiducialThroughFocusStepSizeMm = 0.006				;Step size for through focus stack when finding fiducial
FiducialThroughFocusNumSteps = 31				;Number of steps for through focus stack
SaveFlowCellRegistrationImages = False				;Save images for auto-center, xy skew, and tilt tests

[ClipTest]				;Clip Test parameters
XPositionMmCheck1 = 2				;The x position in mm for the first clip test
YPositionMmCheck1 = 31				;The y position in mm for the first clip test
XPositionMmCheck2 = 18				;The x position in mm for the second clip test
YPositionMmCheck2 = 31				;The y position in mm for the second clip test
ZTopStartMm = 0.3				;The z top starting position
ZBottomEndMm = -0.3				;The z bottom finish position
ZIncrementMm = 0.05				;The incremental distance to move z down

[AnalysisScripts]				;Analysis Scripts
UseableDepthOfFieldFwhmThreasholdPixels = 2.1				;This is the threshhold pixels for the depth of focus analysis script.
UseableDepthOfFieldCurveStartFwhmPixels = 1.5				;This is the FWHM pixels to start the depth of focus curve for the analysis script.
UseableDepthOfFieldCurveEndFwhmPixels = 2.8				;This is the FWHM pixels to end the depth of focus curve for the analysis script.
UseableDepthOfFieldCurveIncrementFwhmPixels = 0.05				;This is the FWHM pixels increment for the depth of focus curve for the analysis script.
UseableFieldOfViewFwhmThreasholdPixels = 1.9				;This is the threshhold pixels for the Useable Field of Focus analysis script.
BestZThreasholdDistanceForParabola = 10				;This is the +/- threshhold Z distance um for finidng the fitted parabola for FWHM and UDOF.

[Beadchip]				;Beadchip parameters
MaxActiveRegistrationThreads = 16				;Max registration threads to be active at one time
FocusSaveFormat = Jpeg				;Format for saving focus files
JpegIntensityScaleFactor = 10				;When saving focus images as jpeg, set this to a non-zero value to get a fixed intensity scale factor instead of auto-contrast
FocusSaveOnlyRegionOfInterest = True				;Save full focus image or just region of interest
SaveFocusImages = True				;Save focus, auto center, tilt and barcode images for bead chips
TileOverlapUm = 50				;Adjacent tile overlap for registration
TileOverlapForRescanUm = 200				;Adjacent tile overlap for registration during re-scan
ComputeChromatismEachRun = True				;When creating the focus model, calculate chromatism also
OpticsDepthOfField1Um = 0.012				;This is the optical depth of field.  It is used in the SNR calculation to determine which images should be out-of-focus.
AutoCenterSignalThreshold = 1.4				;How much more intensity the beads will have over the background
AutoCenterBackgroundThreshold = 1.3				;How much more intensity the non-beaded can have over the min intensity
TiltThresholdRadians = 0.004				;If the tilt is higher than this, don't try scanning
TiltRetries = 0				;Take this many extra tilt images and average the results
UseCalibratedLedCurrent = True				;Use the calibrated LED current from the camera NVRAM
VerboseDebugImages = False				;Save extra debug images during registration
RegistrationPassFailThreshold = 0.75				;Threshold for failing a section because of poor registration
BeadchipAdapterXOffsetMm = -1.95				;Flowcell to beadchip X offset
BeadchipAdapterYOffsetMm = 1.8				;Flowcell to beadchip Y offset
RedExposureMs = 15				;Camera exposure time in ms when scanning
RedNumberOfImages = 3				;Number of images to combine
GreenExposureMs = 15				;Camera exposure time in ms when scanning
GreenNumberOfImages = 3				;Number of images to combine
FocusRedExposureMs = 15				;Camera exposure time in ms when doing focus
FocusGreenExposureMs = 15				;Camera exposure time in ms when doing focus
FocusLaserExposureMs = 0.1				;Laser exposure time in ms when doing focus
FocusLaserGain = 8				;Laser gain setting when doing focus
FocusMaxNumberOfImagesOnRetry = 3				;If the beads are dark, increase the number of focus images up to this limit
BarcodeLength = 22				;Length of barcode sticker
BarcodeExposureMs = 45				;Starting exposure for barcode images
BarcodeFindSurfaceNumSteps = 15				;Number of steps to use for finding the surface
BarcodeFindSurfaceStepSizeMm = 0.025				;Size of each step during surface finding
BarcodeDefaultSurfacePositionMm = 0.15				;Default position of barcode surface
BarcodeTopEdgeStickerToBackgroundRatio = 1.75				;Ratio of sticker intensity to background intensity
BarcodeTopEdgeSearchRangeYMm = 9.1				;How far to search up for top edge of barcode
BarcodeTopEdgeToBarcodeMm = 2.7				;Distance from the top edge of the sticker to the barcode
BarcodePositionXMm = -0.5				;X position of barcode
BarcodePositionYMm = 82.5				;Y position of barcode
BarcodeWhiteStripeMinIntensity = 3800				;Min intensity for white stripes
BarcodeBlackBarMaxIntensity = 1300				;Max intensity for black bar
BarcodeBlackWhiteThresholdIntensity = 2000				;Default intensity for deciding if white stripe or black bar
BarcodeSaveIntermediateImages = False				;Save the tiles scanned to make a barcode
BarcodeSaveFinalImage = False				;Save the stitched image used to make a barcode
BarcodeReadTries = 2				;How many times to try reading the barcode
BarcodeTopEdgeToTextMm = 0				;Distance from top edge of barcode sticker to the text
BarcodeForceReadingText = False				;Even if the barcode was successfully read, read the barcode text.  This is meant for testing.
SpaceRequiredInGbSavingTiffs = 10				;The amount of disk space needed if scanning and saving TIFFs.
SpaceRequiredInGbSavingJpgs = 3				;The amount of disk space needed if scanning and saving JPGs.
SpaceRequiredInGbSavingPngs = 3				;The amount of disk space needed if scanning and saving PNGs.

[Fluidics.FlowCellFluidics1.LanePump.IXPassThroughCavroSyringePump1]				;Defines the pump hardware for the lane pump as a Cavro pump.
DeviceID = /1				;Device ID Prefix /1.
SpeedCommand = V				;Cavro XE = S XCalibur = V
PumpValveMap = Configuration\MP_PumpValveMap1.xml				;Map for pump valve A
ValveCommand = UseAvoidPosition				;IO, use I and O commands, E use only E command, use avoid position will not pass by the avoid position in the reagent valve map.
PressureChangePerPumpStep = 0.002667				;Initial guess for pressure feedback slope (PSI / step).
EnablePolling = False				;Sampling rate for pump position updates
SamplingRate = 1000				;Sampling rate in ms.
FlushAndWarn = False				;Flush device on Errors
AutoDetect = False				;If true software will try to scan COM ports and find device (all devices may not support this)
UsbPortApi = FTDI				;DotNetApi (only for 32-bit Win) / FTDI (x64)
OkIfNoUsbSerialPorts = False				;Okay if no USB serial devices are found
FTDIReadTimeoutMs = 5000				;FTDI read timeout: was 10, CyVera had to use 5000
FTDIWriteTimeoutMs = 0				;FTDI write timeout: was 500, CyVera had to use 0 because of an FTDI device driver bug which caused blue screens
FTDISetUSBParameters = True				;If true, call FTDISetUSBParameters() using CyVera's buffer sizes
FTDIRegisteringTimeoutSecs = 60				;FTDI registering timeout in seconds
FTDIResetPipeRetryCount = 1000				;Max # of times driver tries to reset pipe if error. Default = 50. Increase for noisy environments with many USB errors.
ComPortName = DefaultCOM				;Windows COMx port name, e.g. COM1
Handshake = None				;The control protocol used in establishing a serial port communication.
BaudRate = 9600				;Baud rate in bits per second. Up to 115200
ComPortOffset = 9				;The com position to start at. 0 = start at COM1, 9 = start at COM10, etc
PositionPollingInterval = 200				;PositionPollingInterval
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[Fluidics.FlowCellFluidics1.LanePump.IXPassThroughCavroSyringePump2]				;Defines the pump hardware for the lane pump as a Cavro pump.
DeviceID = /2				;Device ID Prefix /1.
SpeedCommand = V				;Cavro XE = S XCalibur = V
PumpValveMap = Configuration\MP_PumpValveMap1.xml				;Map for pump valve A
ValveCommand = UseAvoidPosition				;IO, use I and O commands, E use only E command, use avoid position will not pass by the avoid position in the reagent valve map.
PressureChangePerPumpStep = 0.002667				;Initial guess for pressure feedback slope (PSI / step).
EnablePolling = False				;Sampling rate for pump position updates
SamplingRate = 1000				;Sampling rate in ms.
FlushAndWarn = False				;Flush device on Errors
AutoDetect = False				;If true software will try to scan COM ports and find device (all devices may not support this)
UsbPortApi = FTDI				;DotNetApi (only for 32-bit Win) / FTDI (x64)
OkIfNoUsbSerialPorts = False				;Okay if no USB serial devices are found
FTDIReadTimeoutMs = 5000				;FTDI read timeout: was 10, CyVera had to use 5000
FTDIWriteTimeoutMs = 0				;FTDI write timeout: was 500, CyVera had to use 0 because of an FTDI device driver bug which caused blue screens
FTDISetUSBParameters = True				;If true, call FTDISetUSBParameters() using CyVera's buffer sizes
FTDIRegisteringTimeoutSecs = 60				;FTDI registering timeout in seconds
FTDIResetPipeRetryCount = 1000				;Max # of times driver tries to reset pipe if error. Default = 50. Increase for noisy environments with many USB errors.
ComPortName = DefaultCOM				;Windows COMx port name, e.g. COM1
Handshake = None				;The control protocol used in establishing a serial port communication.
BaudRate = 9600				;Baud rate in bits per second. Up to 115200
ComPortOffset = 9				;The com position to start at. 0 = start at COM1, 9 = start at COM10, etc
PositionPollingInterval = 200				;PositionPollingInterval
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[Fluidics.FlowCellFluidics1.IxFlowSensor1]				;Bubble flow sensor configuration.
GlitchFilter = 25				;What is the maximum glitch that will be ignored. This is used for ignoring tiny bubbles in the line.
IDTube = 0.03				;ID of the tube used for the flow rate.
DistanceBetweenSensors = 30				;Distance between the two sensor in mm
CommandedBubbleVolumeUl = 5				;Size of the bubble to use for the test (µL)
CommandedFlowRateUlPerMin = 2500				;Flow rate to use for the test.
Solution = 3				;Solution
ErrorThresholdPercent = 10				;Tolerance for passing the test.
MaxCorrelation = 0.5				;Maximum correlation coefficent needed for bubble detection.
IntialPrimeVolume = 500				;Volume to prime the lines with in µL for the flow rate test.
BubbleCountSensorMap = Configuration\MP_BubbleCountSensors.xml				;Bubble Count Sensor Map.
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[Fluidics.FlowCellFluidics1.IxFlowSensor2]				;Bubble flow sensor configuration.
GlitchFilter = 25				;What is the maximum glitch that will be ignored. This is used for ignoring tiny bubbles in the line.
IDTube = 0.03				;ID of the tube used for the flow rate.
DistanceBetweenSensors = 30				;Distance between the two sensor in mm
CommandedBubbleVolumeUl = 5				;Size of the bubble to use for the test (µL)
CommandedFlowRateUlPerMin = 2500				;Flow rate to use for the test.
Solution = 3				;Solution
ErrorThresholdPercent = 10				;Tolerance for passing the test.
MaxCorrelation = 0.5				;Maximum correlation coefficent needed for bubble detection.
IntialPrimeVolume = 500				;Volume to prime the lines with in µL for the flow rate test.
BubbleCountSensorMap = Configuration\MP_BubbleCountSensors.xml				;Bubble Count Sensor Map.
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[Fluidics.FlowCellFluidics1.LanePump.IxPassThroughRheodyneValve1]				;Settings for the Selector Valve.
UartNum = 1				;Index of the ARM-9 Uart to use.
NumberOfPorts = 24				;The number of position ports on the valve.
NumberOfRetries = 4				;The number of attempts to recover from a failure.
ControllerBusyPollRate = 420				;Rate to poll the controller for busy.
ControllerBusyTimeoutMs = 60000				;Timeout for controller polling commands.
FlushDelayBetweenChars = 20				;Delay for flush between characters.
RunSteppingDiagnostics = False				;When true the valve logic will query the valve for stepping information.
UseAutoRecovery = False				;When true the valve logic will attepmt to reposition the valve on a positioning failure.
InitialPosition = 5				;The initial position to set the valve to.
ReagentValveMap = Configuration\MP_ReagentMapA.xml				;Reagent valve map.
FlushAndWarn = False				;Flush device on Errors
AutoDetect = False				;If true software will try to scan COM ports and find device (all devices may not support this)
UsbPortApi = FTDI				;DotNetApi (only for 32-bit Win) / FTDI (x64)
OkIfNoUsbSerialPorts = False				;Okay if no USB serial devices are found
FTDIReadTimeoutMs = 5000				;FTDI read timeout: was 10, CyVera had to use 5000
FTDIWriteTimeoutMs = 0				;FTDI write timeout: was 500, CyVera had to use 0 because of an FTDI device driver bug which caused blue screens
FTDISetUSBParameters = True				;If true, call FTDISetUSBParameters() using CyVera's buffer sizes
FTDIRegisteringTimeoutSecs = 60				;FTDI registering timeout in seconds
FTDIResetPipeRetryCount = 1000				;Max # of times driver tries to reset pipe if error. Default = 50. Increase for noisy environments with many USB errors.
ComPortName = DefaultCOM				;Windows COMx port name, e.g. COM1
Handshake = None				;The control protocol used in establishing a serial port communication.
BaudRate = 115200				;Baud rate in bits per second. Up to 115200
ComPortOffset = 9				;The com position to start at. 0 = start at COM1, 9 = start at COM10, etc
PositionPollingInterval = 200				;PositionPollingInterval
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[Fluidics.FlowCellFluidics1.LanePump.IxPassThroughRheodyneValve2]				;Settings for the Selector Valve.
UartNum = 0				;Index of the ARM-9 Uart to use.
NumberOfPorts = 24				;The number of position ports on the valve.
NumberOfRetries = 4				;The number of attempts to recover from a failure.
ControllerBusyPollRate = 420				;Rate to poll the controller for busy.
ControllerBusyTimeoutMs = 60000				;Timeout for controller polling commands.
FlushDelayBetweenChars = 20				;Delay for flush between characters.
RunSteppingDiagnostics = False				;When true the valve logic will query the valve for stepping information.
UseAutoRecovery = False				;When true the valve logic will attepmt to reposition the valve on a positioning failure.
InitialPosition = 5				;The initial position to set the valve to.
ReagentValveMap = Configuration\MP_ReagentMapB.xml				;Reagent valve map.
FlushAndWarn = False				;Flush device on Errors
AutoDetect = False				;If true software will try to scan COM ports and find device (all devices may not support this)
UsbPortApi = FTDI				;DotNetApi (only for 32-bit Win) / FTDI (x64)
OkIfNoUsbSerialPorts = False				;Okay if no USB serial devices are found
FTDIReadTimeoutMs = 5000				;FTDI read timeout: was 10, CyVera had to use 5000
FTDIWriteTimeoutMs = 0				;FTDI write timeout: was 500, CyVera had to use 0 because of an FTDI device driver bug which caused blue screens
FTDISetUSBParameters = True				;If true, call FTDISetUSBParameters() using CyVera's buffer sizes
FTDIRegisteringTimeoutSecs = 60				;FTDI registering timeout in seconds
FTDIResetPipeRetryCount = 1000				;Max # of times driver tries to reset pipe if error. Default = 50. Increase for noisy environments with many USB errors.
ComPortName = DefaultCOM				;Windows COMx port name, e.g. COM1
Handshake = None				;The control protocol used in establishing a serial port communication.
BaudRate = 115200				;Baud rate in bits per second. Up to 115200
ComPortOffset = 9				;The com position to start at. 0 = start at COM1, 9 = start at COM10, etc
PositionPollingInterval = 200				;PositionPollingInterval
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[ImagingModule]				;Settings for Imaging Module
ManufacturingSaveToCalibration = True				;Allow the option to save to calibration parameters in manufacturing.
ManufacturingCameraCalibrationDefaultOff = False				;Default camera calibration to off
DistanceBetweenCamerasXMm = 21				;Distance between cameras in X
DistanceBetweenCamerasYMm = 30				;Distance between cameras in Y
SensorXMax = 2592				;The maximum pixels in x for the camera sensor
SensorYMax = 1944				;The maximum pixels in y for the camera sensor
MaxImageBufferInMemory = 1600				;The maximum number of images we want to cache in memory. If this number has been reached sequencing will wait for RTA to catch up.
MmfImageBufferAllocationMode = PreAllocatedPool				;The mode to use for the MMF buffer.
SensorUmPerPixel = 2.2				;The number microns per pixel
SensorMagnification = 2.84				;The optical magnification
SnapTimeoutMs = 60000				;The timeout in milliseconds to use when capturing images
FreeMemoryTimeoutMs = 30000				;The timeout in milliseconds to use when freeing firmware memory
SetTargetsTimeoutMs = 30000				;The timeout in milliseconds to use when freeing firmware memory
DefaultFWCommandTimeoutMs = 30000				;The timeout in milliseconds to use for most firmware commands
ZMotorSettleTimeoutMs = 3000				;The timeout in milliseconds to use when waiting for Z motion to settle when performing a manual move on one or more Z motors.
ZFlightRecorderPreMoveRecordTimeMs = 50				;The minimum amount of time in milliseconds to begin recording before starting the z move(s).
ZFlightRecorderPostMoveRecordTimeMs = 50				;The minimum amount of time in milliseconds to continue recording after completing the z move(s).
ZStepSettleTargetMs = 55				;Target ms for z step and settle pre-run test
ZStepSettleThresholdMs = 5				;Threshold ms for acceptable settle results from target
ZMotorPollingIntervalMs = 100				;The interval in ms to poll the z motors for status after sending an initialize command
ZMotorPollingRepeats = 20				;The number of times to poll the z motors for status after sending an initialize command
ZMotorInitAndStatusPollingTimeout = 1000				;The timeout in milliseconds to use when sending an initialize command to the z motor and for subsequent status polling
Shift4Bits = False				;Shift right 4 bits to make 12 bit value
PostImageProcessingMode = Summing				;The image processing method to use (e.g. summing, averaging, etc...).
ImageCorrection = FlatFieldCorrection				;Camera correction to use
ImageCorrectionFolder = D:\CameraCorrections				;Folder with data used for image correction
MultiSnapDelayMs = 250				;The delay in between snaps when multi-snapping images. Not used when snapping on multiple cameras.
ZMinMm = -300				;Z Stage Min (mm) (Used in Limit Tests)
ZMaxMm = 300				;Z Stage Max (mm) (Used in Limit Tests)
MinLEDCurrentLimitPercent = 1				;Minimum LED current value
MaxLEDCurrentLimitPercent = 100				;Maximum LED current value
DefaultLEDPowerRedmW = 220				;Default power for the red LED in milliwatts
DefaultLEDPowerGreenmW = 220				;Default power for the green LED in milliwatts
DefaultCameraGain = 8				;Default camera gain
HasGlassOptics = True				;Whether this IM has glass (true) or hybrid (false) optics.
SupportedSerialNumberPattern = ^IMB\d+$				;Only imaging modules whose serial number matches the specified regex will be allowed. If there is no match, an error will occur during initialization.
StaleImageDetectionFolder = D:\Stale Image Detection				;Folder to save stale images
MeasureIntenistyRowCount = 10				;Calculate intensity over this many rows of the center of the image
MeasureIntensityPercentile = 99.5				;Use the intensity at this percentile as the measured intensity
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[ImagingModule.SimplexityXYStageIx]				;Settings for the Motor.
SoftLimitXAxisNegativeMm = -2				;The smallest position [mm] which the stage can travel on X Axis. Valid ranges: 0 - 10000000
SoftLimitXAxisPositiveMm = 21				;The largest position [mm]  which the stage can travel on X Axis. Valid ranges: 0 - 10000000
SoftLimitYAxisNegativeMm = 5.75				;The smallest position [mm] which the stage can travel on Y Axis. Valid ranges: 0 - 10000000
SoftLimitYAxisPositiveMm = 34.25				;The largest position [mm]  which the stage can travel on Y Axis. Valid ranges: 0 - 10000000
DisableMainboardChecksToReachLimits = True				;Disable the extra checks made on the mainboard for the XY limits
XyLimitTestPattern = TopLeftEdge				;Movement pattern to use for limits test
StepsPerMm = 1259.843				;The number of encoder counts (or steps) per millimeter. Valid ranges: 0 - 10000000
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[ImagingModule.CameraModule1]				;Settings for the read head.
FocusCenterZMm = 0.01138138				;Z position for the center of coarse and fine focus
ChromatismRedToGreenDeltaZMm = -0.002538785				;Delta-Z used for chromatism between the Red and Green channels.
LaserToLEDZBiasMm = NaN				;Distance between the laser best focus for the top surface and the LED best focus
Disabled = False				;First, you must set the CameraModule as simulated so init/home complete.  If it is also disabled, then sequencing, focus, and optical alignment are not attempted.
CameraModuleIndex = 0				;The camera module's index
ImageRotationDegrees = Degrees90FlipVertical				;Degrees to rotate image.
LaneOffset = 0				;The camera module's lane offset - 0 for Modules 1,2,3 and 2 for Modules 4,5,6
FocusLaserExposureMS = 1.6				;Camera exposure time in ms
FocusLaserGain = 8				;Camera gain setting
FocusLaserNumberOfImages = 1				;Number of images to combine
FocusRedExposureMS = 88				;Camera exposure time in ms when taking a through focus stack or focus model stack
FocusRedGain = 8				;Camera gain setting
FocusRedNumberOfImages = 1				;Number of images to combine
FocusGreenExposureMS = 74				;Camera exposure time in ms when taking a through focus stack or focus model stack
FocusGreenGain = 8				;Camera gain setting
FocusGreenNumberOfImages = 1				;Number of images to combine
RedExposureMS = 88				;Camera exposure time in ms when sequencing (overridden in sequencing recipe)
RedGain = 8				;Camera gain setting
RedNumberOfImages = 3				;Number of images to combine (overridden in sequencing recipe)
GreenExposureMS = 74				;Camera exposure time in ms when sequencing (overridden in sequencing recipe)
GreenGain = 8				;Camera gain setting
GreenNumberOfImages = 3				;Number of images to combine (overridden in sequencing recipe)
RelativeCameraPositionXUm = 8.133888				;Stores delta X value of this camera's position relative to the reference camera (camera 2).
RelativeCameraPositionYUm = 10.45799				;Stores delta Y value of this camera's position relative to the reference camera (camera 2).
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[ImagingModule.CameraModule1.ExcitationLEDIx1]				;Settings for an Excitation LED.
Wavelength = 660				;Wavelength of light emitted by led
Color = Red				;Color emitted by this LED
LEDIndex = 1				;1-based unique index for each LED. Matches up with Channel LEDPath, but 1 higher since it is 1-based.
CurrentPercent = 75				;Current percent for led
MaximumOnTimeMs = 1000				;Maximum amount of time to leave the LED on before auto off
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[ImagingModule.CameraModule1.ExcitationLEDIx2]				;Settings for an Excitation LED.
Wavelength = 532				;Wavelength of light emitted by led
Color = Green				;Color emitted by this LED
LEDIndex = 2				;1-based unique index for each LED. Matches up with Channel LEDPath, but 1 higher since it is 1-based.
CurrentPercent = 75				;Current percent for led
MaximumOnTimeMs = 1000				;Maximum amount of time to leave the LED on before auto off
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[ImagingModule.CameraModule2]				;Settings for the read head.
FocusCenterZMm = 0.006136967				;Z position for the center of coarse and fine focus
ChromatismRedToGreenDeltaZMm = -0.002642161				;Delta-Z used for chromatism between the Red and Green channels.
LaserToLEDZBiasMm = NaN				;Distance between the laser best focus for the top surface and the LED best focus
Disabled = False				;First, you must set the CameraModule as simulated so init/home complete.  If it is also disabled, then sequencing, focus, and optical alignment are not attempted.
CameraModuleIndex = 1				;The camera module's index
ImageRotationDegrees = Degrees90FlipVertical				;Degrees to rotate image.
LaneOffset = 0				;The camera module's lane offset - 0 for Modules 1,2,3 and 2 for Modules 4,5,6
FocusLaserExposureMS = 2.8				;Camera exposure time in ms
FocusLaserGain = 8				;Camera gain setting
FocusLaserNumberOfImages = 1				;Number of images to combine
FocusRedExposureMS = 88				;Camera exposure time in ms when taking a through focus stack or focus model stack
FocusRedGain = 8				;Camera gain setting
FocusRedNumberOfImages = 1				;Number of images to combine
FocusGreenExposureMS = 74				;Camera exposure time in ms when taking a through focus stack or focus model stack
FocusGreenGain = 8				;Camera gain setting
FocusGreenNumberOfImages = 1				;Number of images to combine
RedExposureMS = 88				;Camera exposure time in ms when sequencing (overridden in sequencing recipe)
RedGain = 8				;Camera gain setting
RedNumberOfImages = 3				;Number of images to combine (overridden in sequencing recipe)
GreenExposureMS = 74				;Camera exposure time in ms when sequencing (overridden in sequencing recipe)
GreenGain = 8				;Camera gain setting
GreenNumberOfImages = 3				;Number of images to combine (overridden in sequencing recipe)
RelativeCameraPositionXUm = 0				;Stores delta X value of this camera's position relative to the reference camera (camera 2).
RelativeCameraPositionYUm = 0				;Stores delta Y value of this camera's position relative to the reference camera (camera 2).
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[ImagingModule.CameraModule2.ExcitationLEDIx1]				;Settings for an Excitation LED.
Wavelength = 660				;Wavelength of light emitted by led
Color = Red				;Color emitted by this LED
LEDIndex = 1				;1-based unique index for each LED. Matches up with Channel LEDPath, but 1 higher since it is 1-based.
CurrentPercent = 75				;Current percent for led
MaximumOnTimeMs = 1000				;Maximum amount of time to leave the LED on before auto off
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[ImagingModule.CameraModule2.ExcitationLEDIx2]				;Settings for an Excitation LED.
Wavelength = 532				;Wavelength of light emitted by led
Color = Green				;Color emitted by this LED
LEDIndex = 2				;1-based unique index for each LED. Matches up with Channel LEDPath, but 1 higher since it is 1-based.
CurrentPercent = 75				;Current percent for led
MaximumOnTimeMs = 1000				;Maximum amount of time to leave the LED on before auto off
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[ImagingModule.CameraModule3]				;Settings for the read head.
FocusCenterZMm = 0.01044162				;Z position for the center of coarse and fine focus
ChromatismRedToGreenDeltaZMm = -0.002524075				;Delta-Z used for chromatism between the Red and Green channels.
LaserToLEDZBiasMm = NaN				;Distance between the laser best focus for the top surface and the LED best focus
Disabled = False				;First, you must set the CameraModule as simulated so init/home complete.  If it is also disabled, then sequencing, focus, and optical alignment are not attempted.
CameraModuleIndex = 2				;The camera module's index
ImageRotationDegrees = Degrees90FlipVertical				;Degrees to rotate image.
LaneOffset = 0				;The camera module's lane offset - 0 for Modules 1,2,3 and 2 for Modules 4,5,6
FocusLaserExposureMS = 1.6				;Camera exposure time in ms
FocusLaserGain = 8				;Camera gain setting
FocusLaserNumberOfImages = 1				;Number of images to combine
FocusRedExposureMS = 88				;Camera exposure time in ms when taking a through focus stack or focus model stack
FocusRedGain = 8				;Camera gain setting
FocusRedNumberOfImages = 1				;Number of images to combine
FocusGreenExposureMS = 74				;Camera exposure time in ms when taking a through focus stack or focus model stack
FocusGreenGain = 8				;Camera gain setting
FocusGreenNumberOfImages = 1				;Number of images to combine
RedExposureMS = 88				;Camera exposure time in ms when sequencing (overridden in sequencing recipe)
RedGain = 8				;Camera gain setting
RedNumberOfImages = 3				;Number of images to combine (overridden in sequencing recipe)
GreenExposureMS = 74				;Camera exposure time in ms when sequencing (overridden in sequencing recipe)
GreenGain = 8				;Camera gain setting
GreenNumberOfImages = 3				;Number of images to combine (overridden in sequencing recipe)
RelativeCameraPositionXUm = -0.7748604				;Stores delta X value of this camera's position relative to the reference camera (camera 2).
RelativeCameraPositionYUm = 16.65497				;Stores delta Y value of this camera's position relative to the reference camera (camera 2).
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[ImagingModule.CameraModule3.ExcitationLEDIx1]				;Settings for an Excitation LED.
Wavelength = 660				;Wavelength of light emitted by led
Color = Red				;Color emitted by this LED
LEDIndex = 1				;1-based unique index for each LED. Matches up with Channel LEDPath, but 1 higher since it is 1-based.
CurrentPercent = 75				;Current percent for led
MaximumOnTimeMs = 1000				;Maximum amount of time to leave the LED on before auto off
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[ImagingModule.CameraModule3.ExcitationLEDIx2]				;Settings for an Excitation LED.
Wavelength = 532				;Wavelength of light emitted by led
Color = Green				;Color emitted by this LED
LEDIndex = 2				;1-based unique index for each LED. Matches up with Channel LEDPath, but 1 higher since it is 1-based.
CurrentPercent = 75				;Current percent for led
MaximumOnTimeMs = 1000				;Maximum amount of time to leave the LED on before auto off
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[ImagingModule.CameraModule4]				;Settings for the read head.
FocusCenterZMm = -0.003386395				;Z position for the center of coarse and fine focus
ChromatismRedToGreenDeltaZMm = -0.002426085				;Delta-Z used for chromatism between the Red and Green channels.
LaserToLEDZBiasMm = NaN				;Distance between the laser best focus for the top surface and the LED best focus
Disabled = False				;First, you must set the CameraModule as simulated so init/home complete.  If it is also disabled, then sequencing, focus, and optical alignment are not attempted.
CameraModuleIndex = 3				;The camera module's index
ImageRotationDegrees = Degrees270FlipVertical				;Degrees to rotate image.
LaneOffset = 2				;The camera module's lane offset - 0 for Modules 1,2,3 and 2 for Modules 4,5,6
FocusLaserExposureMS = 2.8				;Camera exposure time in ms
FocusLaserGain = 8				;Camera gain setting
FocusLaserNumberOfImages = 1				;Number of images to combine
FocusRedExposureMS = 88				;Camera exposure time in ms when taking a through focus stack or focus model stack
FocusRedGain = 8				;Camera gain setting
FocusRedNumberOfImages = 1				;Number of images to combine
FocusGreenExposureMS = 74				;Camera exposure time in ms when taking a through focus stack or focus model stack
FocusGreenGain = 8				;Camera gain setting
FocusGreenNumberOfImages = 1				;Number of images to combine
RedExposureMS = 88				;Camera exposure time in ms when sequencing (overridden in sequencing recipe)
RedGain = 8				;Camera gain setting
RedNumberOfImages = 3				;Number of images to combine (overridden in sequencing recipe)
GreenExposureMS = 74				;Camera exposure time in ms when sequencing (overridden in sequencing recipe)
GreenGain = 8				;Camera gain setting
GreenNumberOfImages = 3				;Number of images to combine (overridden in sequencing recipe)
RelativeCameraPositionXUm = -37.57048				;Stores delta X value of this camera's position relative to the reference camera (camera 2).
RelativeCameraPositionYUm = 2.711296				;Stores delta Y value of this camera's position relative to the reference camera (camera 2).
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[ImagingModule.CameraModule4.ExcitationLEDIx1]				;Settings for an Excitation LED.
Wavelength = 660				;Wavelength of light emitted by led
Color = Red				;Color emitted by this LED
LEDIndex = 1				;1-based unique index for each LED. Matches up with Channel LEDPath, but 1 higher since it is 1-based.
CurrentPercent = 75				;Current percent for led
MaximumOnTimeMs = 1000				;Maximum amount of time to leave the LED on before auto off
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[ImagingModule.CameraModule4.ExcitationLEDIx2]				;Settings for an Excitation LED.
Wavelength = 532				;Wavelength of light emitted by led
Color = Green				;Color emitted by this LED
LEDIndex = 2				;1-based unique index for each LED. Matches up with Channel LEDPath, but 1 higher since it is 1-based.
CurrentPercent = 75				;Current percent for led
MaximumOnTimeMs = 1000				;Maximum amount of time to leave the LED on before auto off
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[ImagingModule.CameraModule5]				;Settings for the read head.
FocusCenterZMm = -0.01038698				;Z position for the center of coarse and fine focus
ChromatismRedToGreenDeltaZMm = -0.00282598				;Delta-Z used for chromatism between the Red and Green channels.
LaserToLEDZBiasMm = NaN				;Distance between the laser best focus for the top surface and the LED best focus
Disabled = False				;First, you must set the CameraModule as simulated so init/home complete.  If it is also disabled, then sequencing, focus, and optical alignment are not attempted.
CameraModuleIndex = 4				;The camera module's index
ImageRotationDegrees = Degrees270FlipVertical				;Degrees to rotate image.
LaneOffset = 2				;The camera module's lane offset - 0 for Modules 1,2,3 and 2 for Modules 4,5,6
FocusLaserExposureMS = 2.4				;Camera exposure time in ms
FocusLaserGain = 8				;Camera gain setting
FocusLaserNumberOfImages = 1				;Number of images to combine
FocusRedExposureMS = 88				;Camera exposure time in ms when taking a through focus stack or focus model stack
FocusRedGain = 8				;Camera gain setting
FocusRedNumberOfImages = 1				;Number of images to combine
FocusGreenExposureMS = 74				;Camera exposure time in ms when taking a through focus stack or focus model stack
FocusGreenGain = 8				;Camera gain setting
FocusGreenNumberOfImages = 1				;Number of images to combine
RedExposureMS = 88				;Camera exposure time in ms when sequencing (overridden in sequencing recipe)
RedGain = 8				;Camera gain setting
RedNumberOfImages = 3				;Number of images to combine (overridden in sequencing recipe)
GreenExposureMS = 74				;Camera exposure time in ms when sequencing (overridden in sequencing recipe)
GreenGain = 8				;Camera gain setting
GreenNumberOfImages = 3				;Number of images to combine (overridden in sequencing recipe)
RelativeCameraPositionXUm = -25.95091				;Stores delta X value of this camera's position relative to the reference camera (camera 2).
RelativeCameraPositionYUm = 8.908272				;Stores delta Y value of this camera's position relative to the reference camera (camera 2).
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[ImagingModule.CameraModule5.ExcitationLEDIx1]				;Settings for an Excitation LED.
Wavelength = 660				;Wavelength of light emitted by led
Color = Red				;Color emitted by this LED
LEDIndex = 1				;1-based unique index for each LED. Matches up with Channel LEDPath, but 1 higher since it is 1-based.
CurrentPercent = 75				;Current percent for led
MaximumOnTimeMs = 1000				;Maximum amount of time to leave the LED on before auto off
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[ImagingModule.CameraModule5.ExcitationLEDIx2]				;Settings for an Excitation LED.
Wavelength = 532				;Wavelength of light emitted by led
Color = Green				;Color emitted by this LED
LEDIndex = 2				;1-based unique index for each LED. Matches up with Channel LEDPath, but 1 higher since it is 1-based.
CurrentPercent = 75				;Current percent for led
MaximumOnTimeMs = 1000				;Maximum amount of time to leave the LED on before auto off
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[ImagingModule.CameraModule6]				;Settings for the read head.
FocusCenterZMm = 0.009806165				;Z position for the center of coarse and fine focus
ChromatismRedToGreenDeltaZMm = -0.003378124				;Delta-Z used for chromatism between the Red and Green channels.
LaserToLEDZBiasMm = NaN				;Distance between the laser best focus for the top surface and the LED best focus
Disabled = False				;First, you must set the CameraModule as simulated so init/home complete.  If it is also disabled, then sequencing, focus, and optical alignment are not attempted.
CameraModuleIndex = 5				;The camera module's index
ImageRotationDegrees = Degrees270FlipVertical				;Degrees to rotate image.
LaneOffset = 2				;The camera module's lane offset - 0 for Modules 1,2,3 and 2 for Modules 4,5,6
FocusLaserExposureMS = 1.8				;Camera exposure time in ms
FocusLaserGain = 8				;Camera gain setting
FocusLaserNumberOfImages = 1				;Number of images to combine
FocusRedExposureMS = 88				;Camera exposure time in ms when taking a through focus stack or focus model stack
FocusRedGain = 8				;Camera gain setting
FocusRedNumberOfImages = 1				;Number of images to combine
FocusGreenExposureMS = 74				;Camera exposure time in ms when taking a through focus stack or focus model stack
FocusGreenGain = 8				;Camera gain setting
FocusGreenNumberOfImages = 1				;Number of images to combine
RedExposureMS = 88				;Camera exposure time in ms when sequencing (overridden in sequencing recipe)
RedGain = 8				;Camera gain setting
RedNumberOfImages = 3				;Number of images to combine (overridden in sequencing recipe)
GreenExposureMS = 74				;Camera exposure time in ms when sequencing (overridden in sequencing recipe)
GreenGain = 8				;Camera gain setting
GreenNumberOfImages = 3				;Number of images to combine (overridden in sequencing recipe)
RelativeCameraPositionXUm = 17.81702				;Stores delta X value of this camera's position relative to the reference camera (camera 2).
RelativeCameraPositionYUm = 34.08527				;Stores delta Y value of this camera's position relative to the reference camera (camera 2).
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[ImagingModule.CameraModule6.ExcitationLEDIx1]				;Settings for an Excitation LED.
Wavelength = 660				;Wavelength of light emitted by led
Color = Red				;Color emitted by this LED
LEDIndex = 1				;1-based unique index for each LED. Matches up with Channel LEDPath, but 1 higher since it is 1-based.
CurrentPercent = 75				;Current percent for led
MaximumOnTimeMs = 1000				;Maximum amount of time to leave the LED on before auto off
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[ImagingModule.CameraModule6.ExcitationLEDIx2]				;Settings for an Excitation LED.
Wavelength = 532				;Wavelength of light emitted by led
Color = Green				;Color emitted by this LED
LEDIndex = 2				;1-based unique index for each LED. Matches up with Channel LEDPath, but 1 higher since it is 1-based.
CurrentPercent = 75				;Current percent for led
MaximumOnTimeMs = 1000				;Maximum amount of time to leave the LED on before auto off
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[ImagingModule.CameraPCB]				;Settings for the camera PCB board.
MaxNumGuids = 16				;Max num of GUIDS
GuidSize = 64				;Size of camera board GUID
DijSdkLogFileName = 				;To activate DijSDK log, set a valid name for DijSdkLogFileName. Setting it to empty string, deactivates the log.
ValidGuidId = uUSB::uUsb				;Valid DijSdk GUID Id
ReverseOrderOfPCB = False				;Switch cameras 1/2/3 and 4/5/6
Simulated = True				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[UberTargetExposure]				;Defines exposures for tests using the uber target.
BrightObjectGreenExposure = 1				;Green channel exposure for bright objects
BrightObjectRedExposure = 1				;Red channel exposure for bright objects
AutofocusGreenExposure = 4				;Green channel exposure for autofocus
AutofocusRedExposure = 4				;Red channel exposure for autofocus
PinHoleObjectGreenExposure = 120				;Green channel exposure for pin hole objects
PinHoleObjectRedExposure = 120				;Red channel exposure for pin hole objects
ImageBreakThroughGreenExposure = 500				;Green channel exposure for image break through
ImageBreakThroughRedExposure = 500				;Red channel exposure for image break through
OpticsDepthOfField = 0.03				;This is the optical depth of field.  It is used in the SNR calculation to determine which images should be out-of-focus.

[Specifications]				;Locations for the spec sheets.
StageTestsFile = C:\Illumina\NextSeq Manufacturing Software\Modules\NextSeqManufacturingSoftware\Specifications\NSS_Stage_Specsheet_v2.spec				;Path to the specifications for the stage tests.
OpticalTestsFile = C:\Illumina\NextSeq Manufacturing Software\Modules\NextSeqManufacturingSoftware\Specifications\NSS_Optics_Specsheet_v2.spec				;Path to the specifications for the optical tests.

[Fluidics.FlowCellFluidics1.IxFlowCellTemp]				;Settings for the temp controller.
TemperatureOffset = 0				;Set the offset between the readback and flowcell.
TECNumber = 2				;Index for the firmware to control the temp device.
SamplingRateSeconds = 5				;Polling rate (sec) for the background cmd executive thread.
LoggingRateSeconds = 30				;Rate to log temp data to the log file.
DetailedLogging = False				;Log extra temp details.
MinTemp = 16				;The minimum temperature allowed in the UI.
MaxTemp = 96				;The maximum temperature allowed in the UI.
EnablePolling = False				;When set to true the background polling loop is enabled.
InnerOuterLoop = 0				;outer loop = 1, inner = 0
FloatToIntegerScale = 1000000				;Scaling for integer values in FW.
UseAmbientMode = True				;Setting to true turns the TEC off when it is within ambient mode dead band degrees of ambient.
AmbientModeDeadBand = 2				;The range of use of ambient mode.
CoolingProportionalTerm = 1				;The proportional constant for the cooling feedback control.
CoolingIntegralTerm = 0				;The integral constant for the cooling feedback control.
CoolingDerivativeTerm = 0				;The derivative term for the cooling feedback control.
CoolingFeedForwardThreshold = 6				;The delta from target upon which the control switch from feed forward to PID control.
CoolingFeedForwardStepSize = 6				;
HeatingProportionalTerm = 0.25				;The proportional constant for the heating feedback control.
HeatingIntegralTerm = 0.05				;The integral constant for the heating feedback control.
HeatingDerivativeTerm = 0				;The derivative constant for the heating feedback control.
HeatingFeedForwardThreshold = 10				;The delta from target upon which the control switch from feed forward to PID control.
HeatingFeedForwardStepSize = 2.5				;
HeatingMaxVoltage = 2.25				;Maximum allowed TEC voltage when heating.
CoolingMaxVoltage = 1.2				;Maximum allowed TEC voltage when cooling.
TargetTempOnInit = 25				;When StartTECOnInit = true this is the target temperature of the TEC.
StartTECOnInit = False				;When set to true the TEC will be enabled at software startup.
CalibrationLowTarget = 0				;The temperature which is the set point for the low temperature calibration point.
CalibrationLowMeasured = 0				;The temperature the technician measured at the low temperature point during the calibration procedure.
CalibrationHighTarget = 0				;The temperature which is the set point for the high temperature calibration point.
CalibrationHighMeasured = 0				;The temperature the technician measured at the high temperature point during the calibration procedure.
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[Fluidics.FlowCellFluidics1.IxPressureSensor1]				;Settings for the pressure sensor.
Index = 0				;Ix id to provide to red correct pressure sensor
ReadTime = 255				;ms to read the sensor (8-bit)
Gain = 67.82				;Standard transducer calibration.
Intercept = -19.2				;Approximate intercept to be set at manufacturing.
InitialOffset = 0				;Intial pressure offset form manufacturing.
OffsetTolerance = 5				;± Tolerance for variation in offset.
EnablePolling = False				;Sampling rate for pump position updates
SamplingRate = 1000				;Sampling rate in ms.
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[Fluidics.FlowCellFluidics1.IxPressureSensor2]				;Settings for the pressure sensor.
Index = 1				;Ix id to provide to red correct pressure sensor
ReadTime = 255				;ms to read the sensor (8-bit)
Gain = 67.82				;Standard transducer calibration.
Intercept = -19.2				;Approximate intercept to be set at manufacturing.
InitialOffset = 0				;Intial pressure offset form manufacturing.
OffsetTolerance = 5				;± Tolerance for variation in offset.
EnablePolling = False				;Sampling rate for pump position updates
SamplingRate = 1000				;Sampling rate in ms.
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[Instrument]				;Specifies instrument specific settings
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[Fans]				;
Type = IXFan				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 7				;Number of device instances in the array.

[Fans1]				;
Type = IXFan				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 7				;Number of device instances in the array.

[Fans2]				;
Type = IXFan				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 7				;Number of device instances in the array.

[Fans3]				;
Type = IXFan				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 7				;Number of device instances in the array.

[Fans4]				;
Type = IXFan				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 7				;Number of device instances in the array.

[Fans5]				;
Type = IXFan				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 7				;Number of device instances in the array.

[Fans6]				;
Type = IXFan				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 7				;Number of device instances in the array.

[Fans7]				;
Type = IXFan				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 7				;Number of device instances in the array.

[TempProbes]				;
Type = IXTempProbe				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 10				;Number of device instances in the array.

[TempProbes1]				;
Type = IXTempProbe				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 10				;Number of device instances in the array.

[TempProbes2]				;
Type = IXTempProbe				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 10				;Number of device instances in the array.

[TempProbes3]				;
Type = IXTempProbe				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 10				;Number of device instances in the array.

[TempProbes4]				;
Type = IXTempProbe				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 10				;Number of device instances in the array.

[TempProbes5]				;
Type = IXTempProbe				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 10				;Number of device instances in the array.

[TempProbes6]				;
Type = IXTempProbe				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 10				;Number of device instances in the array.

[TempProbes7]				;
Type = IXTempProbe				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 10				;Number of device instances in the array.

[TempProbes8]				;
Type = IXTempProbe				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 10				;Number of device instances in the array.

[TempProbes9]				;
Type = IXTempProbe				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 10				;Number of device instances in the array.

[TempProbes10]				;
Type = IXTempProbe				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 10				;Number of device instances in the array.

[Fluidics]				;Settings for the fluidics module.
DebugForceRandomVolumeConfirmationErrors = False				;
DebugForceRandomVolumeConfirmationErrorsSomePass = False				;
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[AmbientTemperatureSensor]				;Settings for temperature sensor.
SampleRateMs = 3000				;The temperature polling rate(ms)
AllowedNumOutOfRangeTemps = 100				;Number of times temperature may fall outside of standard operating range before warning displayed
TimeToReenableWarning = 60				;Time, in minutes, to re-enable out of range temperature warnings
LowerStandardOpTempC = 20				;Lower Standard Operating Temperature (˚C)
UpperStandardOpTempC = 28				;Lower Standard Operating Temperature (˚C)
LowerDangerOpTempC = 0				;Lower Standard Operating Temperature (˚C)
UpperDangerOpTempC = 50				;Lower Standard Operating Temperature (˚C)
ProbeErrorTempC = -377.17				;Lower Standard Operating Temperature (˚C)
SensorDisplayName = UI Name				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
FlushAndWarn = False				;Flush device on Errors
AutoDetect = False				;If true software will try to scan COM ports and find device (all devices may not support this)
UsbPortApi = FTDI				;DotNetApi (only for 32-bit Win) / FTDI (x64)
OkIfNoUsbSerialPorts = False				;Okay if no USB serial devices are found
FTDIReadTimeoutMs = 5000				;FTDI read timeout: was 10, CyVera had to use 5000
FTDIWriteTimeoutMs = 0				;FTDI write timeout: was 500, CyVera had to use 0 because of an FTDI device driver bug which caused blue screens
FTDISetUSBParameters = True				;If true, call FTDISetUSBParameters() using CyVera's buffer sizes
FTDIRegisteringTimeoutSecs = 60				;FTDI registering timeout in seconds
FTDIResetPipeRetryCount = 1000				;Max # of times driver tries to reset pipe if error. Default = 50. Increase for noisy environments with many USB errors.
ComPortName = DefaultCOM				;Windows COMx port name, e.g. COM1
Handshake = None				;The control protocol used in establishing a serial port communication.
BaudRate = 115200				;Baud rate in bits per second. Up to 115200
ComPortOffset = 9				;The com position to start at. 0 = start at COM1, 9 = start at COM10, etc
PositionPollingInterval = 200				;PositionPollingInterval
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[SipperMotor]				;Settings for the temp controller.
MoveUpCommand = SIPUP				;FPGA command used to move the sipper motor to the up position.
MoveDownCommand = SIPDOWN				;FPGA command used to move the sipper motor to the down position.
SetCurrentCommand = SIPCUR				;FPGA command to set the current of the sipper motor.
SetVelocityCommand = SIPVEL				;FPGA command used to set the velocity of the sipper motor.
ReadUpSensorCommand = SIPUPSNSRRD				;FPGA command to read the sipper up sensor.
ReadDownSensorCommand = SIPDNSNSRRD				;FPGA command to read the sipper down sensor.
CurrentPercent = 70				;must be calibrated (0 to 100)
VelocityPercent = 30				;must be calibrated (0 to 100)
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[LightBar]				;Front panel colored light bar
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[InstrumentSensors]				;
Type = AllSensors				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.

[SingleBoardComputer]				;
Type = SBCDevice				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.

[EmbeddedSystemGatewayDevice]				;Settings for the EmbeddedSystemGateway.
Transport = TCP				;Describes the connection method between the device and PC, TCP or Serial.
BindingType = STATIC				;Describes the type of IP connection used for the device static ip, local host, or discovery service.
IPAddress = 192.168.113.2				;When a static binding type is specified indicates the static address of the device.
IPAddressPC = 192.168.113.5				;When a static binding type is specified indicates the static address of the PC.
IPPort = 5555				;When a static binding type is specified indicates the port of the device.
TcpSendTimeoutMs = 500				;Timeout for TCP Send. 500 Minimum
TcpReceiveTimeoutMs = 500				;Timeout for TCP Receive.
TcpSendMaxAttempts = 4				;Number of attempts to send packet when receiving a socket exception (e.g. timeout)
LogPort = 7360				;Logs the diagnostic information from the ARM9.
ComPortName = COM1				;Windows COMx port name, e.g. COM1
BaudRate = 115200				;Baud rate in bits per second. Up to 115200
IxDebugData = False				;If true software will log the Ix activity from FW in the system log file.
FirmwareLogReplayTimeout = 300				;The timeout in seconds for captureing the firmware logs.
MotorServoHistoryTimeoutMs = 600000				;The timeout in milliseconds for retrieving motor servo history from the firmware.
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[FirmwareNvram]				;Settings for the firmware NVRAM.
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[SBCDevice]				;Settings for the main board.
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[ImagingModule.CameraModules]				;Settings for the read head.
CamerasPerLane = 3				;Number of camera modules per lane
FFCPrnuAfterSpec = 1				;The maximum allowable photo response non-linearity after correction in percent
FFCDrnuBeforeSpec = 10				;The maximum allowable DRNU before correction in counts
FFCTwoByTwoBNoiseSpec = 1				;The maximum allowable 2x2 noise after correction in percent
FFCAverageBrightIntensitySpec = 2000				;The minimum allowable bright intensity required
Type = CameraModule				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 6				;Number of device instances in the array.

[CameraModules]				;Settings for the read head.
CamerasPerLane = 3				;Number of camera modules per lane
FFCPrnuAfterSpec = 1				;The maximum allowable photo response non-linearity after correction in percent
FFCDrnuBeforeSpec = 10				;The maximum allowable DRNU before correction in counts
FFCTwoByTwoBNoiseSpec = 1				;The maximum allowable 2x2 noise after correction in percent
FFCAverageBrightIntensitySpec = 2000				;The minimum allowable bright intensity required
Type = CameraModule				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 6				;Number of device instances in the array.

[ImagingModule.CameraModules1]				;Settings for the read head.
CamerasPerLane = 3				;Number of camera modules per lane
FFCPrnuAfterSpec = 1				;The maximum allowable photo response non-linearity after correction in percent
FFCDrnuBeforeSpec = 10				;The maximum allowable DRNU before correction in counts
FFCTwoByTwoBNoiseSpec = 1				;The maximum allowable 2x2 noise after correction in percent
FFCAverageBrightIntensitySpec = 2000				;The minimum allowable bright intensity required
Type = CameraModule				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 6				;Number of device instances in the array.

[ImagingModule.CameraModules2]				;Settings for the read head.
CamerasPerLane = 3				;Number of camera modules per lane
FFCPrnuAfterSpec = 1				;The maximum allowable photo response non-linearity after correction in percent
FFCDrnuBeforeSpec = 10				;The maximum allowable DRNU before correction in counts
FFCTwoByTwoBNoiseSpec = 1				;The maximum allowable 2x2 noise after correction in percent
FFCAverageBrightIntensitySpec = 2000				;The minimum allowable bright intensity required
Type = CameraModule				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 6				;Number of device instances in the array.

[ImagingModule.CameraModules3]				;Settings for the read head.
CamerasPerLane = 3				;Number of camera modules per lane
FFCPrnuAfterSpec = 1				;The maximum allowable photo response non-linearity after correction in percent
FFCDrnuBeforeSpec = 10				;The maximum allowable DRNU before correction in counts
FFCTwoByTwoBNoiseSpec = 1				;The maximum allowable 2x2 noise after correction in percent
FFCAverageBrightIntensitySpec = 2000				;The minimum allowable bright intensity required
Type = CameraModule				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 6				;Number of device instances in the array.

[ImagingModule.CameraModules4]				;Settings for the read head.
CamerasPerLane = 3				;Number of camera modules per lane
FFCPrnuAfterSpec = 1				;The maximum allowable photo response non-linearity after correction in percent
FFCDrnuBeforeSpec = 10				;The maximum allowable DRNU before correction in counts
FFCTwoByTwoBNoiseSpec = 1				;The maximum allowable 2x2 noise after correction in percent
FFCAverageBrightIntensitySpec = 2000				;The minimum allowable bright intensity required
Type = CameraModule				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 6				;Number of device instances in the array.

[ImagingModule.CameraModules5]				;Settings for the read head.
CamerasPerLane = 3				;Number of camera modules per lane
FFCPrnuAfterSpec = 1				;The maximum allowable photo response non-linearity after correction in percent
FFCDrnuBeforeSpec = 10				;The maximum allowable DRNU before correction in counts
FFCTwoByTwoBNoiseSpec = 1				;The maximum allowable 2x2 noise after correction in percent
FFCAverageBrightIntensitySpec = 2000				;The minimum allowable bright intensity required
Type = CameraModule				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 6				;Number of device instances in the array.

[ImagingModule.CameraModules6]				;Settings for the read head.
CamerasPerLane = 3				;Number of camera modules per lane
FFCPrnuAfterSpec = 1				;The maximum allowable photo response non-linearity after correction in percent
FFCDrnuBeforeSpec = 10				;The maximum allowable DRNU before correction in counts
FFCTwoByTwoBNoiseSpec = 1				;The maximum allowable 2x2 noise after correction in percent
FFCAverageBrightIntensitySpec = 2000				;The minimum allowable bright intensity required
Type = CameraModule				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 6				;Number of device instances in the array.

[ImagingModule.DmaDriver]				;Base settings for DMA Driver
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[ImagingModule.XYStage]				;
Type = SimplexityXYStageIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.

[XYStage]				;
Type = SimplexityXYStageIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.

[ImagingModule.CameraModule1.ExcitationLEDs]				;Select which type of LED is used on this device: ExcitationLED or ExcitationLEDIx
Type = ExcitationLEDIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 2				;Number of device instances in the array.

[ExcitationLEDs]				;Select which type of LED is used on this device: ExcitationLED or ExcitationLEDIx
Type = ExcitationLEDIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 2				;Number of device instances in the array.

[ImagingModule.CameraModule1.ExcitationLEDs1]				;Select which type of LED is used on this device: ExcitationLED or ExcitationLEDIx
Type = ExcitationLEDIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 2				;Number of device instances in the array.

[ImagingModule.CameraModule1.ExcitationLEDs2]				;Select which type of LED is used on this device: ExcitationLED or ExcitationLEDIx
Type = ExcitationLEDIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 2				;Number of device instances in the array.

[ImagingModule.CameraModule1.Camera]				;
Type = AptinaCameraIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.

[Camera]				;
Type = AptinaCameraIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.

[ImagingModule.CameraModule1.LaserDiode]				;Select which type of Autofocus laser is used on this device: AutoFocusLasers or AutoFocusLasersIx
Type = AutoFocusLasersIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.

[LaserDiode]				;Select which type of Autofocus laser is used on this device: AutoFocusLasers or AutoFocusLasersIx
Type = AutoFocusLasersIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.

[ImagingModule.CameraModule1.ZMotor]				;
Type = ZMotorIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.

[ZMotor]				;
Type = ZMotorIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.

[ImagingModule.CameraModule1.AptinaCameraIx]				;Settings for the Aptina camera.
NumSensors = 1				;Number of sensor(s) installed on this system.
PostImageProcessingMode = Summing				;The image processing method to use (e.g. summing, averaging, etc...).
EnableFPGALEDExposureControl = True				;
MaxRetries = 1				;
WaitTimeBeforeInitializeAfterPowerCycle = 1				;
Shift4Bits = True				;Shift right 4 bits to make 12 bit value
ReadOutDelayMs = 0				;Wait at least this much time between taking images
ImageCorrection = FlatFieldCorrection				;Camera correction to use
ImageCorrectionFolder = D:\CameraCorrections				;Folder with data used for image correction
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[ImagingModule.CameraModule1.AutoFocusLasersIx]				;Settings for the AutoFocus lasers.
Color = None				;Color emitted by this LED
LEDIndex = 3				;1-based unique index for each LED. Matches up with Channel LEDPath, but 1 higher since it is 1-based.
CurrentPercent = 50				;Current percent for led
MaximumOnTimeMs = 1000				;Maximum amount of time to leave the LED on before auto off
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[ImagingModule.CameraModule1.ZMotorIx]				;
SoftLimitNegativeMm = -0.3				;The smallest position [mm] that the stage can travel to. Valid ranges: 0 - 10000000
SoftLimitPositiveMm = 0.3				;The largest position [mm] that the stage can travel to.Valid ranges: 0 - 10000000
RetractForChemistryDistanceFromPositiveSoftLimitMm = 0.2				;(8/17/2011 Erik W./Merek S.) Move to the positive soft limit minus this distance [mm] during chemistry cycle. Valid ranges: 0 - 10000
FunctionalTestStartMillimeter = 10				;The start position for the functional test [mm]. Valid ranges: Must be within SoftLimitNegativeMm and SoftLimitPositiveMm
FunctionalTestStepSizeMillimeter = 1.53				;The step size for the functional test [mm]. Valid ranges: 0 - SoftLimitPositiveMm
FunctionalTestSteps = 52				;The number of steps to step per cycle. Valid ranges: 0 - 2147483647
FunctionalTestCycles = 5000				;The number of cycles to execute for a test. Valid ranges: 0 - 2147483647
PositionPollingInterval = 0				;PositionPollingInterval
NumProgramLines = 0				;? Not in any current config
VelocityControlUnitsPerMm = 1				;
AccelControlUnitsPerMm2 = 1				;
VelocityGranularityControlUnitsPerSec = 0.1				;
ControllerMinVelocityControlUnitsPerSec = 0.1				;
ControllerMaxVelocityControlUnitsPerSec = 1				;
ApplicationMinVelocityMmPerSec = 0				;
ApplicationMaxVelocityMmPerSec = 1				;
MinAccelerationMmPerSecSquared = 1				;
MaxAccelerationMmPerSecSquared = 1				;
MinToleranceMm = 1E-05				;
MaxToleranceMm = 0.0005				;
SoftLimitsDefinedInConfigFile = True				;
PositiveRange = False				;
StatusPollingInterval = 50				;
ExtraMotionTimeoutMs = 60000				;
SettlingTimeMs = 3000				;at least until we solve the Y stage vibration issue
MaxBurnInDutyCycle = 50				;
BacklashCorrectionMm = 0				;
MagnetUnderObjectivePositionMm = 0				;
ReverseDirection = False				;
NumRetries = 3				;
VelocityMmPerSecond = 0.5				;
AccelerationMmPerSecSquared = 1				;
ToleranceMm = 0.0005				;
HomeRequiredEvenInUnsafeMode = False				;
HomingTimeoutMs = 60000				;
MaxFlightRecorderSamplesPerRead = 5				;
MetrologyTriggerEnabledUsingLEDEnable = False				;
MetrologyTriggerGapBeforeMoveMs = 0				;
MetrologyTriggerGapAfterMoveMs = 0				;
StepsPerMm = 1				;The number of encoder counts (or steps) per millimeter. Valid ranges: 0 - 10000000
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[ImagingModule.CameraModule2.ExcitationLEDs]				;Select which type of LED is used on this device: ExcitationLED or ExcitationLEDIx
Type = ExcitationLEDIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 2				;Number of device instances in the array.

[ImagingModule.CameraModule2.ExcitationLEDs1]				;Select which type of LED is used on this device: ExcitationLED or ExcitationLEDIx
Type = ExcitationLEDIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 2				;Number of device instances in the array.

[ImagingModule.CameraModule2.ExcitationLEDs2]				;Select which type of LED is used on this device: ExcitationLED or ExcitationLEDIx
Type = ExcitationLEDIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 2				;Number of device instances in the array.

[ImagingModule.CameraModule2.Camera]				;
Type = AptinaCameraIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.

[ImagingModule.CameraModule2.LaserDiode]				;Select which type of Autofocus laser is used on this device: AutoFocusLasers or AutoFocusLasersIx
Type = AutoFocusLasersIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.

[ImagingModule.CameraModule2.ZMotor]				;
Type = ZMotorIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.

[ImagingModule.CameraModule2.AptinaCameraIx]				;Settings for the Aptina camera.
NumSensors = 1				;Number of sensor(s) installed on this system.
PostImageProcessingMode = Summing				;The image processing method to use (e.g. summing, averaging, etc...).
EnableFPGALEDExposureControl = True				;
MaxRetries = 1				;
WaitTimeBeforeInitializeAfterPowerCycle = 1				;
Shift4Bits = True				;Shift right 4 bits to make 12 bit value
ReadOutDelayMs = 0				;Wait at least this much time between taking images
ImageCorrection = FlatFieldCorrection				;Camera correction to use
ImageCorrectionFolder = D:\CameraCorrections				;Folder with data used for image correction
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[ImagingModule.CameraModule2.AutoFocusLasersIx]				;Settings for the AutoFocus lasers.
Color = None				;Color emitted by this LED
LEDIndex = 3				;1-based unique index for each LED. Matches up with Channel LEDPath, but 1 higher since it is 1-based.
CurrentPercent = 50				;Current percent for led
MaximumOnTimeMs = 1000				;Maximum amount of time to leave the LED on before auto off
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[ImagingModule.CameraModule2.ZMotorIx]				;
SoftLimitNegativeMm = -0.3				;The smallest position [mm] that the stage can travel to. Valid ranges: 0 - 10000000
SoftLimitPositiveMm = 0.3				;The largest position [mm] that the stage can travel to.Valid ranges: 0 - 10000000
RetractForChemistryDistanceFromPositiveSoftLimitMm = 0.2				;(8/17/2011 Erik W./Merek S.) Move to the positive soft limit minus this distance [mm] during chemistry cycle. Valid ranges: 0 - 10000
FunctionalTestStartMillimeter = 10				;The start position for the functional test [mm]. Valid ranges: Must be within SoftLimitNegativeMm and SoftLimitPositiveMm
FunctionalTestStepSizeMillimeter = 1.53				;The step size for the functional test [mm]. Valid ranges: 0 - SoftLimitPositiveMm
FunctionalTestSteps = 52				;The number of steps to step per cycle. Valid ranges: 0 - 2147483647
FunctionalTestCycles = 5000				;The number of cycles to execute for a test. Valid ranges: 0 - 2147483647
PositionPollingInterval = 0				;PositionPollingInterval
NumProgramLines = 0				;? Not in any current config
VelocityControlUnitsPerMm = 1				;
AccelControlUnitsPerMm2 = 1				;
VelocityGranularityControlUnitsPerSec = 0.1				;
ControllerMinVelocityControlUnitsPerSec = 0.1				;
ControllerMaxVelocityControlUnitsPerSec = 1				;
ApplicationMinVelocityMmPerSec = 0				;
ApplicationMaxVelocityMmPerSec = 1				;
MinAccelerationMmPerSecSquared = 1				;
MaxAccelerationMmPerSecSquared = 1				;
MinToleranceMm = 1E-05				;
MaxToleranceMm = 0.0005				;
SoftLimitsDefinedInConfigFile = True				;
PositiveRange = False				;
StatusPollingInterval = 50				;
ExtraMotionTimeoutMs = 60000				;
SettlingTimeMs = 3000				;at least until we solve the Y stage vibration issue
MaxBurnInDutyCycle = 50				;
BacklashCorrectionMm = 0				;
MagnetUnderObjectivePositionMm = 0				;
ReverseDirection = False				;
NumRetries = 3				;
VelocityMmPerSecond = 0.5				;
AccelerationMmPerSecSquared = 1				;
ToleranceMm = 0.0005				;
HomeRequiredEvenInUnsafeMode = False				;
HomingTimeoutMs = 60000				;
MaxFlightRecorderSamplesPerRead = 5				;
MetrologyTriggerEnabledUsingLEDEnable = False				;
MetrologyTriggerGapBeforeMoveMs = 0				;
MetrologyTriggerGapAfterMoveMs = 0				;
StepsPerMm = 1				;The number of encoder counts (or steps) per millimeter. Valid ranges: 0 - 10000000
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[ImagingModule.CameraModule3.ExcitationLEDs]				;Select which type of LED is used on this device: ExcitationLED or ExcitationLEDIx
Type = ExcitationLEDIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 2				;Number of device instances in the array.

[ImagingModule.CameraModule3.ExcitationLEDs1]				;Select which type of LED is used on this device: ExcitationLED or ExcitationLEDIx
Type = ExcitationLEDIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 2				;Number of device instances in the array.

[ImagingModule.CameraModule3.ExcitationLEDs2]				;Select which type of LED is used on this device: ExcitationLED or ExcitationLEDIx
Type = ExcitationLEDIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 2				;Number of device instances in the array.

[ImagingModule.CameraModule3.Camera]				;
Type = AptinaCameraIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.

[ImagingModule.CameraModule3.LaserDiode]				;Select which type of Autofocus laser is used on this device: AutoFocusLasers or AutoFocusLasersIx
Type = AutoFocusLasersIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.

[ImagingModule.CameraModule3.ZMotor]				;
Type = ZMotorIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.

[ImagingModule.CameraModule3.AptinaCameraIx]				;Settings for the Aptina camera.
NumSensors = 1				;Number of sensor(s) installed on this system.
PostImageProcessingMode = Summing				;The image processing method to use (e.g. summing, averaging, etc...).
EnableFPGALEDExposureControl = True				;
MaxRetries = 1				;
WaitTimeBeforeInitializeAfterPowerCycle = 1				;
Shift4Bits = True				;Shift right 4 bits to make 12 bit value
ReadOutDelayMs = 0				;Wait at least this much time between taking images
ImageCorrection = FlatFieldCorrection				;Camera correction to use
ImageCorrectionFolder = D:\CameraCorrections				;Folder with data used for image correction
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[ImagingModule.CameraModule3.AutoFocusLasersIx]				;Settings for the AutoFocus lasers.
Color = None				;Color emitted by this LED
LEDIndex = 3				;1-based unique index for each LED. Matches up with Channel LEDPath, but 1 higher since it is 1-based.
CurrentPercent = 50				;Current percent for led
MaximumOnTimeMs = 1000				;Maximum amount of time to leave the LED on before auto off
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[ImagingModule.CameraModule3.ZMotorIx]				;
SoftLimitNegativeMm = -0.3				;The smallest position [mm] that the stage can travel to. Valid ranges: 0 - 10000000
SoftLimitPositiveMm = 0.3				;The largest position [mm] that the stage can travel to.Valid ranges: 0 - 10000000
RetractForChemistryDistanceFromPositiveSoftLimitMm = 0.2				;(8/17/2011 Erik W./Merek S.) Move to the positive soft limit minus this distance [mm] during chemistry cycle. Valid ranges: 0 - 10000
FunctionalTestStartMillimeter = 10				;The start position for the functional test [mm]. Valid ranges: Must be within SoftLimitNegativeMm and SoftLimitPositiveMm
FunctionalTestStepSizeMillimeter = 1.53				;The step size for the functional test [mm]. Valid ranges: 0 - SoftLimitPositiveMm
FunctionalTestSteps = 52				;The number of steps to step per cycle. Valid ranges: 0 - 2147483647
FunctionalTestCycles = 5000				;The number of cycles to execute for a test. Valid ranges: 0 - 2147483647
PositionPollingInterval = 0				;PositionPollingInterval
NumProgramLines = 0				;? Not in any current config
VelocityControlUnitsPerMm = 1				;
AccelControlUnitsPerMm2 = 1				;
VelocityGranularityControlUnitsPerSec = 0.1				;
ControllerMinVelocityControlUnitsPerSec = 0.1				;
ControllerMaxVelocityControlUnitsPerSec = 1				;
ApplicationMinVelocityMmPerSec = 0				;
ApplicationMaxVelocityMmPerSec = 1				;
MinAccelerationMmPerSecSquared = 1				;
MaxAccelerationMmPerSecSquared = 1				;
MinToleranceMm = 1E-05				;
MaxToleranceMm = 0.0005				;
SoftLimitsDefinedInConfigFile = True				;
PositiveRange = False				;
StatusPollingInterval = 50				;
ExtraMotionTimeoutMs = 60000				;
SettlingTimeMs = 3000				;at least until we solve the Y stage vibration issue
MaxBurnInDutyCycle = 50				;
BacklashCorrectionMm = 0				;
MagnetUnderObjectivePositionMm = 0				;
ReverseDirection = False				;
NumRetries = 3				;
VelocityMmPerSecond = 0.5				;
AccelerationMmPerSecSquared = 1				;
ToleranceMm = 0.0005				;
HomeRequiredEvenInUnsafeMode = False				;
HomingTimeoutMs = 60000				;
MaxFlightRecorderSamplesPerRead = 5				;
MetrologyTriggerEnabledUsingLEDEnable = False				;
MetrologyTriggerGapBeforeMoveMs = 0				;
MetrologyTriggerGapAfterMoveMs = 0				;
StepsPerMm = 1				;The number of encoder counts (or steps) per millimeter. Valid ranges: 0 - 10000000
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[ImagingModule.CameraModule4.ExcitationLEDs]				;Select which type of LED is used on this device: ExcitationLED or ExcitationLEDIx
Type = ExcitationLEDIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 2				;Number of device instances in the array.

[ImagingModule.CameraModule4.ExcitationLEDs1]				;Select which type of LED is used on this device: ExcitationLED or ExcitationLEDIx
Type = ExcitationLEDIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 2				;Number of device instances in the array.

[ImagingModule.CameraModule4.ExcitationLEDs2]				;Select which type of LED is used on this device: ExcitationLED or ExcitationLEDIx
Type = ExcitationLEDIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 2				;Number of device instances in the array.

[ImagingModule.CameraModule4.Camera]				;
Type = AptinaCameraIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.

[ImagingModule.CameraModule4.LaserDiode]				;Select which type of Autofocus laser is used on this device: AutoFocusLasers or AutoFocusLasersIx
Type = AutoFocusLasersIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.

[ImagingModule.CameraModule4.ZMotor]				;
Type = ZMotorIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.

[ImagingModule.CameraModule4.AptinaCameraIx]				;Settings for the Aptina camera.
NumSensors = 1				;Number of sensor(s) installed on this system.
PostImageProcessingMode = Summing				;The image processing method to use (e.g. summing, averaging, etc...).
EnableFPGALEDExposureControl = True				;
MaxRetries = 1				;
WaitTimeBeforeInitializeAfterPowerCycle = 1				;
Shift4Bits = True				;Shift right 4 bits to make 12 bit value
ReadOutDelayMs = 0				;Wait at least this much time between taking images
ImageCorrection = FlatFieldCorrection				;Camera correction to use
ImageCorrectionFolder = D:\CameraCorrections				;Folder with data used for image correction
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[ImagingModule.CameraModule4.AutoFocusLasersIx]				;Settings for the AutoFocus lasers.
Color = None				;Color emitted by this LED
LEDIndex = 3				;1-based unique index for each LED. Matches up with Channel LEDPath, but 1 higher since it is 1-based.
CurrentPercent = 50				;Current percent for led
MaximumOnTimeMs = 1000				;Maximum amount of time to leave the LED on before auto off
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[ImagingModule.CameraModule4.ZMotorIx]				;
SoftLimitNegativeMm = -0.3				;The smallest position [mm] that the stage can travel to. Valid ranges: 0 - 10000000
SoftLimitPositiveMm = 0.3				;The largest position [mm] that the stage can travel to.Valid ranges: 0 - 10000000
RetractForChemistryDistanceFromPositiveSoftLimitMm = 0.2				;(8/17/2011 Erik W./Merek S.) Move to the positive soft limit minus this distance [mm] during chemistry cycle. Valid ranges: 0 - 10000
FunctionalTestStartMillimeter = 10				;The start position for the functional test [mm]. Valid ranges: Must be within SoftLimitNegativeMm and SoftLimitPositiveMm
FunctionalTestStepSizeMillimeter = 1.53				;The step size for the functional test [mm]. Valid ranges: 0 - SoftLimitPositiveMm
FunctionalTestSteps = 52				;The number of steps to step per cycle. Valid ranges: 0 - 2147483647
FunctionalTestCycles = 5000				;The number of cycles to execute for a test. Valid ranges: 0 - 2147483647
PositionPollingInterval = 0				;PositionPollingInterval
NumProgramLines = 0				;? Not in any current config
VelocityControlUnitsPerMm = 1				;
AccelControlUnitsPerMm2 = 1				;
VelocityGranularityControlUnitsPerSec = 0.1				;
ControllerMinVelocityControlUnitsPerSec = 0.1				;
ControllerMaxVelocityControlUnitsPerSec = 1				;
ApplicationMinVelocityMmPerSec = 0				;
ApplicationMaxVelocityMmPerSec = 1				;
MinAccelerationMmPerSecSquared = 1				;
MaxAccelerationMmPerSecSquared = 1				;
MinToleranceMm = 1E-05				;
MaxToleranceMm = 0.0005				;
SoftLimitsDefinedInConfigFile = True				;
PositiveRange = False				;
StatusPollingInterval = 50				;
ExtraMotionTimeoutMs = 60000				;
SettlingTimeMs = 3000				;at least until we solve the Y stage vibration issue
MaxBurnInDutyCycle = 50				;
BacklashCorrectionMm = 0				;
MagnetUnderObjectivePositionMm = 0				;
ReverseDirection = False				;
NumRetries = 3				;
VelocityMmPerSecond = 0.5				;
AccelerationMmPerSecSquared = 1				;
ToleranceMm = 0.0005				;
HomeRequiredEvenInUnsafeMode = False				;
HomingTimeoutMs = 60000				;
MaxFlightRecorderSamplesPerRead = 5				;
MetrologyTriggerEnabledUsingLEDEnable = False				;
MetrologyTriggerGapBeforeMoveMs = 0				;
MetrologyTriggerGapAfterMoveMs = 0				;
StepsPerMm = 1				;The number of encoder counts (or steps) per millimeter. Valid ranges: 0 - 10000000
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[ImagingModule.CameraModule5.ExcitationLEDs]				;Select which type of LED is used on this device: ExcitationLED or ExcitationLEDIx
Type = ExcitationLEDIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 2				;Number of device instances in the array.

[ImagingModule.CameraModule5.ExcitationLEDs1]				;Select which type of LED is used on this device: ExcitationLED or ExcitationLEDIx
Type = ExcitationLEDIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 2				;Number of device instances in the array.

[ImagingModule.CameraModule5.ExcitationLEDs2]				;Select which type of LED is used on this device: ExcitationLED or ExcitationLEDIx
Type = ExcitationLEDIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 2				;Number of device instances in the array.

[ImagingModule.CameraModule5.Camera]				;
Type = AptinaCameraIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.

[ImagingModule.CameraModule5.LaserDiode]				;Select which type of Autofocus laser is used on this device: AutoFocusLasers or AutoFocusLasersIx
Type = AutoFocusLasersIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.

[ImagingModule.CameraModule5.ZMotor]				;
Type = ZMotorIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.

[ImagingModule.CameraModule5.AptinaCameraIx]				;Settings for the Aptina camera.
NumSensors = 1				;Number of sensor(s) installed on this system.
PostImageProcessingMode = Summing				;The image processing method to use (e.g. summing, averaging, etc...).
EnableFPGALEDExposureControl = True				;
MaxRetries = 1				;
WaitTimeBeforeInitializeAfterPowerCycle = 1				;
Shift4Bits = True				;Shift right 4 bits to make 12 bit value
ReadOutDelayMs = 0				;Wait at least this much time between taking images
ImageCorrection = FlatFieldCorrection				;Camera correction to use
ImageCorrectionFolder = D:\CameraCorrections				;Folder with data used for image correction
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[ImagingModule.CameraModule5.AutoFocusLasersIx]				;Settings for the AutoFocus lasers.
Color = None				;Color emitted by this LED
LEDIndex = 3				;1-based unique index for each LED. Matches up with Channel LEDPath, but 1 higher since it is 1-based.
CurrentPercent = 50				;Current percent for led
MaximumOnTimeMs = 1000				;Maximum amount of time to leave the LED on before auto off
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[ImagingModule.CameraModule5.ZMotorIx]				;
SoftLimitNegativeMm = -0.3				;The smallest position [mm] that the stage can travel to. Valid ranges: 0 - 10000000
SoftLimitPositiveMm = 0.3				;The largest position [mm] that the stage can travel to.Valid ranges: 0 - 10000000
RetractForChemistryDistanceFromPositiveSoftLimitMm = 0.2				;(8/17/2011 Erik W./Merek S.) Move to the positive soft limit minus this distance [mm] during chemistry cycle. Valid ranges: 0 - 10000
FunctionalTestStartMillimeter = 10				;The start position for the functional test [mm]. Valid ranges: Must be within SoftLimitNegativeMm and SoftLimitPositiveMm
FunctionalTestStepSizeMillimeter = 1.53				;The step size for the functional test [mm]. Valid ranges: 0 - SoftLimitPositiveMm
FunctionalTestSteps = 52				;The number of steps to step per cycle. Valid ranges: 0 - 2147483647
FunctionalTestCycles = 5000				;The number of cycles to execute for a test. Valid ranges: 0 - 2147483647
PositionPollingInterval = 0				;PositionPollingInterval
NumProgramLines = 0				;? Not in any current config
VelocityControlUnitsPerMm = 1				;
AccelControlUnitsPerMm2 = 1				;
VelocityGranularityControlUnitsPerSec = 0.1				;
ControllerMinVelocityControlUnitsPerSec = 0.1				;
ControllerMaxVelocityControlUnitsPerSec = 1				;
ApplicationMinVelocityMmPerSec = 0				;
ApplicationMaxVelocityMmPerSec = 1				;
MinAccelerationMmPerSecSquared = 1				;
MaxAccelerationMmPerSecSquared = 1				;
MinToleranceMm = 1E-05				;
MaxToleranceMm = 0.0005				;
SoftLimitsDefinedInConfigFile = True				;
PositiveRange = False				;
StatusPollingInterval = 50				;
ExtraMotionTimeoutMs = 60000				;
SettlingTimeMs = 3000				;at least until we solve the Y stage vibration issue
MaxBurnInDutyCycle = 50				;
BacklashCorrectionMm = 0				;
MagnetUnderObjectivePositionMm = 0				;
ReverseDirection = False				;
NumRetries = 3				;
VelocityMmPerSecond = 0.5				;
AccelerationMmPerSecSquared = 1				;
ToleranceMm = 0.0005				;
HomeRequiredEvenInUnsafeMode = False				;
HomingTimeoutMs = 60000				;
MaxFlightRecorderSamplesPerRead = 5				;
MetrologyTriggerEnabledUsingLEDEnable = False				;
MetrologyTriggerGapBeforeMoveMs = 0				;
MetrologyTriggerGapAfterMoveMs = 0				;
StepsPerMm = 1				;The number of encoder counts (or steps) per millimeter. Valid ranges: 0 - 10000000
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[ImagingModule.CameraModule6.ExcitationLEDs]				;Select which type of LED is used on this device: ExcitationLED or ExcitationLEDIx
Type = ExcitationLEDIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 2				;Number of device instances in the array.

[ImagingModule.CameraModule6.ExcitationLEDs1]				;Select which type of LED is used on this device: ExcitationLED or ExcitationLEDIx
Type = ExcitationLEDIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 2				;Number of device instances in the array.

[ImagingModule.CameraModule6.ExcitationLEDs2]				;Select which type of LED is used on this device: ExcitationLED or ExcitationLEDIx
Type = ExcitationLEDIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 2				;Number of device instances in the array.

[ImagingModule.CameraModule6.Camera]				;
Type = AptinaCameraIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.

[ImagingModule.CameraModule6.LaserDiode]				;Select which type of Autofocus laser is used on this device: AutoFocusLasers or AutoFocusLasersIx
Type = AutoFocusLasersIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.

[ImagingModule.CameraModule6.ZMotor]				;
Type = ZMotorIx				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.

[ImagingModule.CameraModule6.AptinaCameraIx]				;Settings for the Aptina camera.
NumSensors = 1				;Number of sensor(s) installed on this system.
PostImageProcessingMode = Summing				;The image processing method to use (e.g. summing, averaging, etc...).
EnableFPGALEDExposureControl = True				;
MaxRetries = 1				;
WaitTimeBeforeInitializeAfterPowerCycle = 1				;
Shift4Bits = True				;Shift right 4 bits to make 12 bit value
ReadOutDelayMs = 0				;Wait at least this much time between taking images
ImageCorrection = FlatFieldCorrection				;Camera correction to use
ImageCorrectionFolder = D:\CameraCorrections				;Folder with data used for image correction
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[ImagingModule.CameraModule6.AutoFocusLasersIx]				;Settings for the AutoFocus lasers.
Color = None				;Color emitted by this LED
LEDIndex = 3				;1-based unique index for each LED. Matches up with Channel LEDPath, but 1 higher since it is 1-based.
CurrentPercent = 50				;Current percent for led
MaximumOnTimeMs = 1000				;Maximum amount of time to leave the LED on before auto off
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[ImagingModule.CameraModule6.ZMotorIx]				;
SoftLimitNegativeMm = -0.3				;The smallest position [mm] that the stage can travel to. Valid ranges: 0 - 10000000
SoftLimitPositiveMm = 0.3				;The largest position [mm] that the stage can travel to.Valid ranges: 0 - 10000000
RetractForChemistryDistanceFromPositiveSoftLimitMm = 0.2				;(8/17/2011 Erik W./Merek S.) Move to the positive soft limit minus this distance [mm] during chemistry cycle. Valid ranges: 0 - 10000
FunctionalTestStartMillimeter = 10				;The start position for the functional test [mm]. Valid ranges: Must be within SoftLimitNegativeMm and SoftLimitPositiveMm
FunctionalTestStepSizeMillimeter = 1.53				;The step size for the functional test [mm]. Valid ranges: 0 - SoftLimitPositiveMm
FunctionalTestSteps = 52				;The number of steps to step per cycle. Valid ranges: 0 - 2147483647
FunctionalTestCycles = 5000				;The number of cycles to execute for a test. Valid ranges: 0 - 2147483647
PositionPollingInterval = 0				;PositionPollingInterval
NumProgramLines = 0				;? Not in any current config
VelocityControlUnitsPerMm = 1				;
AccelControlUnitsPerMm2 = 1				;
VelocityGranularityControlUnitsPerSec = 0.1				;
ControllerMinVelocityControlUnitsPerSec = 0.1				;
ControllerMaxVelocityControlUnitsPerSec = 1				;
ApplicationMinVelocityMmPerSec = 0				;
ApplicationMaxVelocityMmPerSec = 1				;
MinAccelerationMmPerSecSquared = 1				;
MaxAccelerationMmPerSecSquared = 1				;
MinToleranceMm = 1E-05				;
MaxToleranceMm = 0.0005				;
SoftLimitsDefinedInConfigFile = True				;
PositiveRange = False				;
StatusPollingInterval = 50				;
ExtraMotionTimeoutMs = 60000				;
SettlingTimeMs = 3000				;at least until we solve the Y stage vibration issue
MaxBurnInDutyCycle = 50				;
BacklashCorrectionMm = 0				;
MagnetUnderObjectivePositionMm = 0				;
ReverseDirection = False				;
NumRetries = 3				;
VelocityMmPerSecond = 0.5				;
AccelerationMmPerSecSquared = 1				;
ToleranceMm = 0.0005				;
HomeRequiredEvenInUnsafeMode = False				;
HomingTimeoutMs = 60000				;
MaxFlightRecorderSamplesPerRead = 5				;
MetrologyTriggerEnabledUsingLEDEnable = False				;
MetrologyTriggerGapBeforeMoveMs = 0				;
MetrologyTriggerGapAfterMoveMs = 0				;
StepsPerMm = 1				;The number of encoder counts (or steps) per millimeter. Valid ranges: 0 - 10000000
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[Fluidics.FlowCellFluidics]				;Settings for the flow cell.
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[Fluidics.FlowCellFluidics1]				;Settings for the flow cell.
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[Fluidics.ConsumablesTray]				;
Type = ConsumablesLoader				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.

[ConsumablesTray]				;
Type = ConsumablesLoader				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.

[Fluidics.FlowCellFluidics1.FlowSensor]				;
Type = IxFlowSensor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 2				;Number of device instances in the array.

[FlowSensor]				;
Type = IxFlowSensor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 2				;Number of device instances in the array.

[Fluidics.FlowCellFluidics1.FlowSensor1]				;
Type = IxFlowSensor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 2				;Number of device instances in the array.

[Fluidics.FlowCellFluidics1.FlowSensor2]				;
Type = IxFlowSensor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 2				;Number of device instances in the array.

[Fluidics.FlowCellFluidics1.PressureSensor]				;
Type = IxPressureSensor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 2				;Number of device instances in the array.

[PressureSensor]				;
Type = IxPressureSensor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 2				;Number of device instances in the array.

[Fluidics.FlowCellFluidics1.PressureSensor1]				;
Type = IxPressureSensor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 2				;Number of device instances in the array.

[Fluidics.FlowCellFluidics1.PressureSensor2]				;
Type = IxPressureSensor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 2				;Number of device instances in the array.

[Fluidics.FlowCellFluidics1.FluidicsPump]				;
Type = LanePump				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.

[FluidicsPump]				;
Type = LanePump				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.

[Fluidics.FlowCellFluidics1.FlowCellTemp]				;
Type = IxFlowCellTemp				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.

[FlowCellTemp]				;
Type = IxFlowCellTemp				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.

[Fluidics.FlowCellFluidics1.Balance]				;
Type = MettlerToledoBalance				;Configuration item type
Exists = False				;Whether or not the device exists in this instrument configuration.

[Balance]				;
Type = MettlerToledoBalance				;Configuration item type
Exists = False				;Whether or not the device exists in this instrument configuration.

[Fluidics.FlowCellFluidics1.FlowCellWithEmbeddedTempSensor]				;
Type = FlowCellTemperatureSensor				;Configuration item type
Exists = False				;Whether or not the device exists in this instrument configuration.

[FlowCellWithEmbeddedTempSensor]				;
Type = FlowCellTemperatureSensor				;Configuration item type
Exists = False				;Whether or not the device exists in this instrument configuration.

[Fluidics.FlowCellFluidics1.LanePump]				;Settings for the Pump.
StepsPerFullStroke = 3000				;Number of hardware steps for a full pump stroke.
SyringeVolumeUl = 500				;Number of uL for one full syringe.
MoveToStartSpeedUlPerMin = 2500				;Speed when moving pump to initial position (before every pump operation)
MaxVelocityUlPerMinute = 15000				;Maximum Pump Speed in uL / min
MinVelocityUlPerMinute = 13				;Minimum Pump speed uL / min
AsyncDeliveryDelay = True				;Prevents software from aspirating a second solution until the proper timeout has expired [DelayMsForSolutionX in config file].
AllowDispenseToByPass = False				;Allow selection of the bypass position on the pump.
DelayMsBetweenDispenseAndSolenoid = 2				;Delay between moving the pump to dispense and moving the valve to the aspirate position.
DelayMsBetweenReagentValveAndAspirate = 100				;Delay between moving the pump to aspirate and moving the valve to the dispense position.
MultiAspirate = True				;Allows aspirating multiple times before dispensing.
MaxExpectedPumpMoveTime = 5000				;Maximum expected time, in milliseconds, to expect the pump to need for moving to the initial position.
InactiveValveToPlug = False				;When true software will set non-active lane pair valves to the plug position for each operation.
UseAspirateAutorecovery = False				;When true software will attempt recovery and resynch of pumps on a syringe overload.
UseDispenseAutorecovery = False				;When true software will attempt recovery and resynch of pumps on a syringe overload.
FlushAndWarn = False				;Flush device on Errors
AutoDetect = False				;If true software will try to scan COM ports and find device (all devices may not support this)
UsbPortApi = FTDI				;DotNetApi (only for 32-bit Win) / FTDI (x64)
OkIfNoUsbSerialPorts = False				;Okay if no USB serial devices are found
FTDIReadTimeoutMs = 5000				;FTDI read timeout: was 10, CyVera had to use 5000
FTDIWriteTimeoutMs = 0				;FTDI write timeout: was 500, CyVera had to use 0 because of an FTDI device driver bug which caused blue screens
FTDISetUSBParameters = True				;If true, call FTDISetUSBParameters() using CyVera's buffer sizes
FTDIRegisteringTimeoutSecs = 60				;FTDI registering timeout in seconds
FTDIResetPipeRetryCount = 1000				;Max # of times driver tries to reset pipe if error. Default = 50. Increase for noisy environments with many USB errors.
ComPortName = DefaultCOM				;Windows COMx port name, e.g. COM1
Handshake = None				;The control protocol used in establishing a serial port communication.
BaudRate = 115200				;Baud rate in bits per second. Up to 115200
ComPortOffset = 9				;The com position to start at. 0 = start at COM1, 9 = start at COM10, etc
PositionPollingInterval = 200				;PositionPollingInterval
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[Fluidics.FlowCellFluidics1.LanePump.ReagentValve]				;
Type = IxPassThroughRheodyneValve				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 2				;Number of device instances in the array.

[ReagentValve]				;
Type = IxPassThroughRheodyneValve				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 2				;Number of device instances in the array.

[Fluidics.FlowCellFluidics1.LanePump.ReagentValve1]				;
Type = IxPassThroughRheodyneValve				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 2				;Number of device instances in the array.

[Fluidics.FlowCellFluidics1.LanePump.ReagentValve2]				;
Type = IxPassThroughRheodyneValve				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 2				;Number of device instances in the array.

[Fluidics.FlowCellFluidics1.LanePump.SyringePump]				;
Type = IXPassThroughCavroSyringePump				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 2				;Number of device instances in the array.

[SyringePump]				;
Type = IXPassThroughCavroSyringePump				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 2				;Number of device instances in the array.

[Fluidics.FlowCellFluidics1.LanePump.SyringePump1]				;
Type = IXPassThroughCavroSyringePump				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 2				;Number of device instances in the array.

[Fluidics.FlowCellFluidics1.LanePump.SyringePump2]				;
Type = IXPassThroughCavroSyringePump				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 2				;Number of device instances in the array.

[Fluidics.FlowCellFluidics1.MettlerToledoBalance]				;Settings for the Balance.
GravimetricsPassThreshold = 0.05				;The maximum percent deviation for a gravimetrics measurement.
FlushAndWarn = False				;Flush device on Errors
AutoDetect = False				;If true software will try to scan COM ports and find device (all devices may not support this)
UsbPortApi = FTDI				;DotNetApi (only for 32-bit Win) / FTDI (x64)
OkIfNoUsbSerialPorts = False				;Okay if no USB serial devices are found
FTDIReadTimeoutMs = 5000				;FTDI read timeout: was 10, CyVera had to use 5000
FTDIWriteTimeoutMs = 0				;FTDI write timeout: was 500, CyVera had to use 0 because of an FTDI device driver bug which caused blue screens
FTDISetUSBParameters = True				;If true, call FTDISetUSBParameters() using CyVera's buffer sizes
FTDIRegisteringTimeoutSecs = 60				;FTDI registering timeout in seconds
FTDIResetPipeRetryCount = 1000				;Max # of times driver tries to reset pipe if error. Default = 50. Increase for noisy environments with many USB errors.
ComPortName = COM1				;Windows COMx port name, e.g. COM1
Handshake = None				;The control protocol used in establishing a serial port communication.
BaudRate = 9600				;Baud rate in bits per second. Up to 115200
ComPortOffset = 9				;The com position to start at. 0 = start at COM1, 9 = start at COM10, etc
PositionPollingInterval = 200				;PositionPollingInterval
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[Fluidics.FlowCellFluidics1.FlowCellTemperatureSensor]				;Settings for temperature sensor.
NumberOfSensors = 15				;The number of physical temperature sensors on the flow cell sensor
SamplingTimeMs = 1000				;The time during which we collect calibration sensor data
SensorDisplayName = UI Name				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
FlushAndWarn = False				;Flush device on Errors
AutoDetect = False				;If true software will try to scan COM ports and find device (all devices may not support this)
UsbPortApi = FTDI				;DotNetApi (only for 32-bit Win) / FTDI (x64)
OkIfNoUsbSerialPorts = False				;Okay if no USB serial devices are found
FTDIReadTimeoutMs = 5000				;FTDI read timeout: was 10, CyVera had to use 5000
FTDIWriteTimeoutMs = 0				;FTDI write timeout: was 500, CyVera had to use 0 because of an FTDI device driver bug which caused blue screens
FTDISetUSBParameters = True				;If true, call FTDISetUSBParameters() using CyVera's buffer sizes
FTDIRegisteringTimeoutSecs = 60				;FTDI registering timeout in seconds
FTDIResetPipeRetryCount = 1000				;Max # of times driver tries to reset pipe if error. Default = 50. Increase for noisy environments with many USB errors.
ComPortName = DefaultCOM				;Windows COMx port name, e.g. COM1
Handshake = None				;The control protocol used in establishing a serial port communication.
BaudRate = 9600				;Baud rate in bits per second. Up to 115200
ComPortOffset = 9				;The com position to start at. 0 = start at COM1, 9 = start at COM10, etc
PositionPollingInterval = 200				;PositionPollingInterval
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[Fluidics.ConsumablesLoader]				;Flow cell automation (motors only)
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[Fluidics.ConsumablesLoader.TheFlowCellDoor]				;Consumables Loader flow cell door.
Type = FlowCellDoor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.

[TheFlowCellDoor]				;Consumables Loader flow cell door.
Type = FlowCellDoor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.

[Fluidics.ConsumablesLoader.TheBufferStraws]				;Consumables Loader flow cell door.
Type = BufferStraws				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.

[TheBufferStraws]				;Consumables Loader flow cell door.
Type = BufferStraws				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.

[Fluidics.ConsumablesLoader.FlowCellDoor]				;Settings for the flow cell door
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[Fluidics.ConsumablesLoader.BufferStraws]				;Settings for the flow cell door
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[AllSensors]				;Settings for the sensors module.
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[AllSensors.Sensors]				;
Type = IxSensor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 30				;Number of device instances in the array.

[Sensors]				;
Type = IxSensor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 30				;Number of device instances in the array.

[AllSensors.Sensors1]				;
Type = IxSensor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 30				;Number of device instances in the array.

[AllSensors.Sensors2]				;
Type = IxSensor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 30				;Number of device instances in the array.

[AllSensors.Sensors3]				;
Type = IxSensor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 30				;Number of device instances in the array.

[AllSensors.Sensors4]				;
Type = IxSensor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 30				;Number of device instances in the array.

[AllSensors.Sensors5]				;
Type = IxSensor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 30				;Number of device instances in the array.

[AllSensors.Sensors6]				;
Type = IxSensor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 30				;Number of device instances in the array.

[AllSensors.Sensors7]				;
Type = IxSensor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 30				;Number of device instances in the array.

[AllSensors.Sensors8]				;
Type = IxSensor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 30				;Number of device instances in the array.

[AllSensors.Sensors9]				;
Type = IxSensor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 30				;Number of device instances in the array.

[AllSensors.Sensors10]				;
Type = IxSensor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 30				;Number of device instances in the array.

[AllSensors.Sensors11]				;
Type = IxSensor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 30				;Number of device instances in the array.

[AllSensors.Sensors12]				;
Type = IxSensor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 30				;Number of device instances in the array.

[AllSensors.Sensors13]				;
Type = IxSensor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 30				;Number of device instances in the array.

[AllSensors.Sensors14]				;
Type = IxSensor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 30				;Number of device instances in the array.

[AllSensors.Sensors15]				;
Type = IxSensor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 30				;Number of device instances in the array.

[AllSensors.Sensors16]				;
Type = IxSensor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 30				;Number of device instances in the array.

[AllSensors.Sensors17]				;
Type = IxSensor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 30				;Number of device instances in the array.

[AllSensors.Sensors18]				;
Type = IxSensor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 30				;Number of device instances in the array.

[AllSensors.Sensors19]				;
Type = IxSensor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 30				;Number of device instances in the array.

[AllSensors.Sensors20]				;
Type = IxSensor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 30				;Number of device instances in the array.

[AllSensors.Sensors21]				;
Type = IxSensor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 30				;Number of device instances in the array.

[AllSensors.Sensors22]				;
Type = IxSensor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 30				;Number of device instances in the array.

[AllSensors.Sensors23]				;
Type = IxSensor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 30				;Number of device instances in the array.

[AllSensors.Sensors24]				;
Type = IxSensor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 30				;Number of device instances in the array.

[AllSensors.Sensors25]				;
Type = IxSensor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 30				;Number of device instances in the array.

[AllSensors.Sensors26]				;
Type = IxSensor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 30				;Number of device instances in the array.

[AllSensors.Sensors27]				;
Type = IxSensor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 30				;Number of device instances in the array.

[AllSensors.Sensors28]				;
Type = IxSensor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 30				;Number of device instances in the array.

[AllSensors.Sensors29]				;
Type = IxSensor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 30				;Number of device instances in the array.

[AllSensors.Sensors30]				;
Type = IxSensor				;Configuration item type
Exists = True				;Whether or not the device exists in this instrument configuration.
Length = 30				;Number of device instances in the array.

[AllSensors.RfidConsumables]				;RFID Consumables Config Section
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[AllSensors.RfidConsumables.ReagentWithRfid]				;Reagent RFID Config Section
ReadTimeoutMs = 5000				;
WriteTimeoutMs = 5000				;
SimulatedReadError = False				;
SimulatedWriteError = False				;
SimulatedPreviouslyUsed = False				;
SimulatedAlreadyFinishedUsed = False				;
SimulatedUID = 16143013243217586766				;Simulated UID
SimulatedRSSI = 99999				;Simulated RSSI
SimulatedExpirationDate = 6/9/2018				;
SimulatedConsumableType = P11ReagentTag				;Type of consumable: flowcell, reagent, etc.
SimulatedSerialNumber = RN0123456-12345				;
SimulatedLotNumber = 1				;
SimulatedPartNumber = 1234				;
SimulatedConsumableThroughput = P11High				;Throughput size of this consumable
SimulatedEnforceSignatureVerification = False				;Whether or not a valid RFID signature is enforced in simulation
TemporaryLockRfidAtEndOfRun = True				;Whether or not the RFID data gets locked at the end of a run
TemporaryDecoupleFinishedAndLock = False				;A consumable is marked as finished if it has a finsihed data written to it and contains locked blocks. For testing we don't want to lock blocks to not burn through RFID tags but we still want to test the RFID workflow. Setting this to true allows this.
AllowedRestartIntervalInDays = 7				;The maximum amount of days that can pass before restarting a previously started flow cell is disallowed.
SimulatedPartNumberRevision = A				;
SimulatedInstrumentId = SimInstrumentID				;
SimulatedSignature = 30, 2D, 2, 15, 0, 9E, 39, F7, 52, 4, A8, 56, CF, 58, C9, 9D, D3, 81, 17, C6, A0, C6, 93, 84, 7, 2, 14, 36, DF, ED, 50, E5, D3, 2D, E8, 23, 52, B, C8, C8, C1, EA, 3D, 9A, D6, 8A, F8, 0				;
SimulatedNumberOfCycles = 318				;
SimulatedNumberOfRuns = 1				;
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[AllSensors.RfidConsumables.BufferWithRfid]				;Buffer RFID Config Section
ReadTimeoutMs = 5000				;
WriteTimeoutMs = 5000				;
SimulatedReadError = False				;
SimulatedWriteError = False				;
SimulatedPreviouslyUsed = False				;
SimulatedAlreadyFinishedUsed = False				;
SimulatedUID = 16143013243217586766				;Simulated UID
SimulatedRSSI = 99999				;Simulated RSSI
SimulatedExpirationDate = 6/9/2018				;
SimulatedConsumableType = P11BufferTag				;Type of consumable: flowcell, reagent, etc.
SimulatedSerialNumber = BU0123456-12345				;
SimulatedLotNumber = 1				;
SimulatedPartNumber = 1234				;
SimulatedConsumableThroughput = Universal				;Throughput size of this consumable
SimulatedEnforceSignatureVerification = False				;Whether or not a valid RFID signature is enforced in simulation
TemporaryLockRfidAtEndOfRun = True				;Whether or not the RFID data gets locked at the end of a run
TemporaryDecoupleFinishedAndLock = False				;A consumable is marked as finished if it has a finsihed data written to it and contains locked blocks. For testing we don't want to lock blocks to not burn through RFID tags but we still want to test the RFID workflow. Setting this to true allows this.
AllowedRestartIntervalInDays = 7				;The maximum amount of days that can pass before restarting a previously started flow cell is disallowed.
SimulatedPartNumberRevision = A				;
SimulatedInstrumentId = SimInstrumentID				;
SimulatedSignature = 30, 2C, 2, 14, 54, 18, AF, F8, 3C, FB, 46, C5, BB, A4, 42, 63, E4, CC, AF, 49, 3A, CD, 33, E8, 2, 14, F, 1, 83, F4, 53, F8, E0, 8, C2, CB, 94, B2, C4, 7A, 13, F4, 2A, F0, DE, E3, 0, 0				;
SimulatedNumberOfCycles = 318				;
SimulatedNumberOfRuns = 1				;
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[AllSensors.RfidConsumables.FlowCellWithRfid]				;Flow Cell RFID Config Section
ReadTimeoutMs = 5000				;
WriteTimeoutMs = 5000				;
SimulatedReadError = False				;
SimulatedWriteError = False				;
SimulatedPreviouslyUsed = False				;
SimulatedAlreadyFinishedUsed = False				;
SimulatedUID = 16143013243217586766				;Simulated UID
SimulatedRSSI = 99999				;Simulated RSSI
SimulatedExpirationDate = 6/9/2018				;
SimulatedConsumableType = P11FlowcellTag				;Type of consumable: flowcell, reagent, etc.
SimulatedSerialNumber = XXXXXXXXX				;
SimulatedLotNumber = 1				;
SimulatedPartNumber = 1234				;
SimulatedConsumableThroughput = P11High				;Throughput size of this consumable
SimulatedEnforceSignatureVerification = False				;Whether or not a valid RFID signature is enforced in simulation
TemporaryLockRfidAtEndOfRun = True				;Whether or not the RFID data gets locked at the end of a run
TemporaryDecoupleFinishedAndLock = False				;A consumable is marked as finished if it has a finsihed data written to it and contains locked blocks. For testing we don't want to lock blocks to not burn through RFID tags but we still want to test the RFID workflow. Setting this to true allows this.
AllowedRestartIntervalInDays = 7				;The maximum amount of days that can pass before restarting a previously started flow cell is disallowed.
SimulatedPartNumberRevision = A				;
SimulatedInstrumentId = SimInstrumentID				;
SimulatedSignature = 30, 2D, 2, 15, 0, 81, BD, 9D, A1, 96, 93, 4A, E9, 63, 3D, EF, 29, 10, 66, 55, 9F, AB, EE, E6, ED, 2, 14, 24, 19, 14, 24, 3D, 48, C4, E1, AB, 55, 6F, 6F, DD, 52, 14, 6C, FA, F1, AA, 37, 0				;
SimulatedNumberOfCycles = 318				;
SimulatedNumberOfRuns = 1				;
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[AllSensors.IxSensor1]				;IX protocol sensors
IxId = ix_sensor_flowcell_home_x				;Sensor ID used to read the correct sensor
ForceFirmwareWhileSimulated = False				;Indicates whether the firmware value for the sensor will be forced to the sensor state while also in Simulated state
InvertSensor = False				;
SimulatedSensorState = False				;
SensorDisplayName = Flow cell home X axis				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
SensorIdentifier = FlowCellHomeX				;Unique identifier for sensor
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[AllSensors.IxSensor2]				;IX protocol sensors
IxId = ix_sensor_flowcell_home_y				;Sensor ID used to read the correct sensor
ForceFirmwareWhileSimulated = False				;Indicates whether the firmware value for the sensor will be forced to the sensor state while also in Simulated state
InvertSensor = False				;
SimulatedSensorState = False				;
SensorDisplayName = Flow cell home y axis				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
SensorIdentifier = FlowCellHomeY				;Unique identifier for sensor
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[AllSensors.IxSensor3]				;IX protocol sensors
IxId = ix_sensor_flowcell_home_z				;Sensor ID used to read the correct sensor
ForceFirmwareWhileSimulated = False				;Indicates whether the firmware value for the sensor will be forced to the sensor state while also in Simulated state
InvertSensor = False				;
SimulatedSensorState = False				;
SensorDisplayName = Flow cell home z axis				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
SensorIdentifier = FlowCellHomeZ				;Unique identifier for sensor
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[AllSensors.IxSensor4]				;IX protocol sensors
IxId = ix_sensor_flowcell_home_align				;Sensor ID used to read the correct sensor
ForceFirmwareWhileSimulated = False				;Indicates whether the firmware value for the sensor will be forced to the sensor state while also in Simulated state
InvertSensor = False				;
SimulatedSensorState = True				;
SensorDisplayName = Flow cell home align				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
SensorIdentifier = FlowCellHomeAlign				;Unique identifier for sensor
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[AllSensors.IxSensor5]				;IX protocol sensors
IxId = ix_sensor_flowcell_align1				;Sensor ID used to read the correct sensor
ForceFirmwareWhileSimulated = False				;Indicates whether the firmware value for the sensor will be forced to the sensor state while also in Simulated state
InvertSensor = False				;
SimulatedSensorState = False				;
SensorDisplayName = Flow cell align 1				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
SensorIdentifier = FlowCellAlign1				;Unique identifier for sensor
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[AllSensors.IxSensor6]				;IX protocol sensors
IxId = ix_sensor_flowcell_align2				;Sensor ID used to read the correct sensor
ForceFirmwareWhileSimulated = False				;Indicates whether the firmware value for the sensor will be forced to the sensor state while also in Simulated state
InvertSensor = False				;
SimulatedSensorState = False				;
SensorDisplayName = Flow cell align 2				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
SensorIdentifier = FlowCellAlign2				;Unique identifier for sensor
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[AllSensors.IxSensor7]				;IX protocol sensors
IxId = ix_sensor_flowcell_door_open				;Sensor ID used to read the correct sensor
ForceFirmwareWhileSimulated = False				;Indicates whether the firmware value for the sensor will be forced to the sensor state while also in Simulated state
InvertSensor = False				;
SimulatedSensorState = False				;
SensorDisplayName = Flow cell door open				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
SensorIdentifier = FlowCellDoorOpen				;Unique identifier for sensor
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[AllSensors.IxSensor8]				;IX protocol sensors
IxId = ix_sensor_flowcell_door_closed				;Sensor ID used to read the correct sensor
ForceFirmwareWhileSimulated = False				;Indicates whether the firmware value for the sensor will be forced to the sensor state while also in Simulated state
InvertSensor = False				;
SimulatedSensorState = True				;
SensorDisplayName = Flow cell door closed				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
SensorIdentifier = FlowCellDoorClosed				;Unique identifier for sensor
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[AllSensors.IxSensor9]				;IX protocol sensors
IxId = ix_sensor_reagent_tray_down				;Sensor ID used to read the correct sensor
ForceFirmwareWhileSimulated = False				;Indicates whether the firmware value for the sensor will be forced to the sensor state while also in Simulated state
InvertSensor = False				;
SimulatedSensorState = True				;
SensorDisplayName = Reagent tray down				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
SensorIdentifier = ReagentTrayDown				;Unique identifier for sensor
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[AllSensors.IxSensor10]				;IX protocol sensors
IxId = ix_sensor_reagent_tray_seq				;Sensor ID used to read the correct sensor
ForceFirmwareWhileSimulated = False				;Indicates whether the firmware value for the sensor will be forced to the sensor state while also in Simulated state
InvertSensor = False				;
SimulatedSensorState = False				;
SensorDisplayName = Reagent tray sequencing				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
SensorIdentifier = ReagentTraySequencing				;Unique identifier for sensor
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[AllSensors.IxSensor11]				;IX protocol sensors
IxId = ix_sensor_reagent_tray_up				;Sensor ID used to read the correct sensor
ForceFirmwareWhileSimulated = False				;Indicates whether the firmware value for the sensor will be forced to the sensor state while also in Simulated state
InvertSensor = False				;
SimulatedSensorState = False				;
SensorDisplayName = Reagent tray up				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
SensorIdentifier = ReagentTrayUp				;Unique identifier for sensor
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[AllSensors.IxSensor12]				;IX protocol sensors
IxId = ix_sensor_reagent_door_open				;Sensor ID used to read the correct sensor
ForceFirmwareWhileSimulated = False				;Indicates whether the firmware value for the sensor will be forced to the sensor state while also in Simulated state
InvertSensor = False				;
SimulatedSensorState = False				;
SensorDisplayName = Reagent door open				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
SensorIdentifier = ReagentDoorOpen				;Unique identifier for sensor
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[AllSensors.IxSensor13]				;IX protocol sensors
IxId = ix_sensor_reagent_tray_back				;Sensor ID used to read the correct sensor
ForceFirmwareWhileSimulated = False				;Indicates whether the firmware value for the sensor will be forced to the sensor state while also in Simulated state
InvertSensor = False				;
SimulatedSensorState = False				;
SensorDisplayName = Reagent tray back				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
SensorIdentifier = ReagentTrayBack				;Unique identifier for sensor
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[AllSensors.IxSensor14]				;IX protocol sensors
IxId = ix_sensor_reagent_tray_present				;Sensor ID used to read the correct sensor
ForceFirmwareWhileSimulated = False				;Indicates whether the firmware value for the sensor will be forced to the sensor state while also in Simulated state
InvertSensor = False				;
SimulatedSensorState = False				;
SensorDisplayName = Reagent tray present				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
SensorIdentifier = ReagentTrayPresent				;Unique identifier for sensor
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[AllSensors.IxSensor15]				;IX protocol sensors
IxId = ix_sensor_sipper_y_home				;Sensor ID used to read the correct sensor
ForceFirmwareWhileSimulated = False				;Indicates whether the firmware value for the sensor will be forced to the sensor state while also in Simulated state
InvertSensor = False				;
SimulatedSensorState = True				;
SensorDisplayName = Sipper sequencing position				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
SensorIdentifier = SipperYHome				;Unique identifier for sensor
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[AllSensors.IxSensor16]				;IX protocol sensors
IxId = ix_sensor_sipper_y_fwd				;Sensor ID used to read the correct sensor
ForceFirmwareWhileSimulated = False				;Indicates whether the firmware value for the sensor will be forced to the sensor state while also in Simulated state
InvertSensor = False				;
SimulatedSensorState = True				;
SensorDisplayName = Sipper forward position				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
SensorIdentifier = SipperYForward				;Unique identifier for sensor
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[AllSensors.IxSensor17]				;IX protocol sensors
IxId = ix_sensor_straws_up				;Sensor ID used to read the correct sensor
ForceFirmwareWhileSimulated = False				;Indicates whether the firmware value for the sensor will be forced to the sensor state while also in Simulated state
InvertSensor = False				;
SimulatedSensorState = False				;
SensorDisplayName = Straws up				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
SensorIdentifier = StrawsUp				;Unique identifier for sensor
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[AllSensors.IxSensor18]				;IX protocol sensors
IxId = ix_sensor_straws_down				;Sensor ID used to read the correct sensor
ForceFirmwareWhileSimulated = False				;Indicates whether the firmware value for the sensor will be forced to the sensor state while also in Simulated state
InvertSensor = False				;
SimulatedSensorState = False				;
SensorDisplayName = Straws down				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
SensorIdentifier = StrawsDown				;Unique identifier for sensor
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[AllSensors.IxSensor19]				;IX protocol sensors
IxId = ix_sensor_bubble0				;Sensor ID used to read the correct sensor
ForceFirmwareWhileSimulated = False				;Indicates whether the firmware value for the sensor will be forced to the sensor state while also in Simulated state
InvertSensor = False				;
SimulatedSensorState = False				;
SensorDisplayName = Bubble 0				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
SensorIdentifier = Bubble0				;Unique identifier for sensor
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[AllSensors.IxSensor20]				;IX protocol sensors
IxId = ix_sensor_bubble1				;Sensor ID used to read the correct sensor
ForceFirmwareWhileSimulated = False				;Indicates whether the firmware value for the sensor will be forced to the sensor state while also in Simulated state
InvertSensor = False				;
SimulatedSensorState = False				;
SensorDisplayName = Bubble 1				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
SensorIdentifier = Bubble1				;Unique identifier for sensor
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[AllSensors.IxSensor21]				;IX protocol sensors
IxId = ix_sensor_bubble2				;Sensor ID used to read the correct sensor
ForceFirmwareWhileSimulated = False				;Indicates whether the firmware value for the sensor will be forced to the sensor state while also in Simulated state
InvertSensor = False				;
SimulatedSensorState = False				;
SensorDisplayName = Bubble 2				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
SensorIdentifier = Bubble2				;Unique identifier for sensor
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[AllSensors.IxSensor22]				;IX protocol sensors
IxId = ix_sensor_bubble3				;Sensor ID used to read the correct sensor
ForceFirmwareWhileSimulated = False				;Indicates whether the firmware value for the sensor will be forced to the sensor state while also in Simulated state
InvertSensor = False				;
SimulatedSensorState = False				;
SensorDisplayName = Bubble 3				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
SensorIdentifier = Bubble3				;Unique identifier for sensor
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[AllSensors.IxSensor23]				;IX protocol sensors
IxId = ix_sensor_bubble4				;Sensor ID used to read the correct sensor
ForceFirmwareWhileSimulated = False				;Indicates whether the firmware value for the sensor will be forced to the sensor state while also in Simulated state
InvertSensor = False				;
SimulatedSensorState = False				;
SensorDisplayName = Bubble 4				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
SensorIdentifier = Bubble4				;Unique identifier for sensor
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[AllSensors.IxSensor24]				;IX protocol sensors
IxId = ix_sensor_bubble5				;Sensor ID used to read the correct sensor
ForceFirmwareWhileSimulated = False				;Indicates whether the firmware value for the sensor will be forced to the sensor state while also in Simulated state
InvertSensor = False				;
SimulatedSensorState = False				;
SensorDisplayName = Bubble 5				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
SensorIdentifier = Bubble5				;Unique identifier for sensor
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[AllSensors.IxSensor25]				;IX protocol sensors
IxId = ix_sensor_waste_present				;Sensor ID used to read the correct sensor
ForceFirmwareWhileSimulated = False				;Indicates whether the firmware value for the sensor will be forced to the sensor state while also in Simulated state
InvertSensor = False				;
SimulatedSensorState = False				;
SensorDisplayName = Waste present				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
SensorIdentifier = WastePresent				;Unique identifier for sensor
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[AllSensors.IxSensor26]				;IX protocol sensors
IxId = ix_sensor_waste_door_open				;Sensor ID used to read the correct sensor
ForceFirmwareWhileSimulated = False				;Indicates whether the firmware value for the sensor will be forced to the sensor state while also in Simulated state
InvertSensor = False				;
SimulatedSensorState = False				;
SensorDisplayName = Waste door open				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
SensorIdentifier = WasteDoorOpen				;Unique identifier for sensor
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[AllSensors.IxSensor27]				;IX protocol sensors
DebounceMs = 30000				;Amount of time the sensor state must be static before changing reported state (ms)
DebounceByDefault = True				;Whether the sensor should be debounced by default
IxId = ix_sensor_waste_full				;Sensor ID used to read the correct sensor
ForceFirmwareWhileSimulated = False				;Indicates whether the firmware value for the sensor will be forced to the sensor state while also in Simulated state
InvertSensor = False				;
SimulatedSensorState = False				;
SensorDisplayName = Waste full				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
SensorIdentifier = WasteFull				;Unique identifier for sensor
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[AllSensors.IxSensor28]				;IX protocol sensors
IxId = ix_sensor_buffer_present				;Sensor ID used to read the correct sensor
ForceFirmwareWhileSimulated = False				;Indicates whether the firmware value for the sensor will be forced to the sensor state while also in Simulated state
InvertSensor = False				;
SimulatedSensorState = False				;
SensorDisplayName = Buffer present				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
SensorIdentifier = BufferPresent				;Unique identifier for sensor
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[AllSensors.IxSensor29]				;IX protocol sensors
IxId = ix_sensor_panel_present				;Sensor ID used to read the correct sensor
ForceFirmwareWhileSimulated = False				;Indicates whether the firmware value for the sensor will be forced to the sensor state while also in Simulated state
InvertSensor = False				;
SimulatedSensorState = False				;
SensorDisplayName = Panel present				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
SensorIdentifier = PanelPresent				;Unique identifier for sensor
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[AllSensors.IxSensor30]				;IX protocol sensors
IxId = ix_sensor_power_button				;Sensor ID used to read the correct sensor
ForceFirmwareWhileSimulated = False				;Indicates whether the firmware value for the sensor will be forced to the sensor state while also in Simulated state
InvertSensor = False				;
SimulatedSensorState = False				;
SensorDisplayName = Power Button pressed				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
SensorIdentifier = PowerButtonPressed				;Unique identifier for sensor
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[IXFan1]				;IX fans
IxId = ix_fan_id_LED				;Sensor ID used to read the fan data.
SensorDisplayName = LED				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
MinimumPPM = 0				;Minimum Pulses per minute for working fan.
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[IXFan2]				;IX fans
IxId = ix_fan_id_ebox0				;Sensor ID used to read the fan data.
SensorDisplayName = Ebox0				;Name of sensor to appear in the UI
DisplayInSensorUI = False				;If true will display the sensor in the UI.
MinimumPPM = 0				;Minimum Pulses per minute for working fan.
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[IXFan3]				;IX fans
IxId = ix_fan_id_ebox1				;Sensor ID used to read the fan data.
SensorDisplayName = Ebox1				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
MinimumPPM = 0				;Minimum Pulses per minute for working fan.
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[IXFan4]				;IX fans
IxId = ix_fan_id_exhaust0				;Sensor ID used to read the fan data.
SensorDisplayName = Exhaust0				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
MinimumPPM = 0				;Minimum Pulses per minute for working fan.
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[IXFan5]				;IX fans
IxId = ix_fan_id_exhaust1				;Sensor ID used to read the fan data.
SensorDisplayName = Exhaust1				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
MinimumPPM = 0				;Minimum Pulses per minute for working fan.
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[IXFan6]				;IX fans
IxId = ix_fan_id_exhaust2				;Sensor ID used to read the fan data.
SensorDisplayName = Exhaust2				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
MinimumPPM = 0				;Minimum Pulses per minute for working fan.
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[IXFan7]				;IX fans
IxId = ix_fan_id_flowcell				;Sensor ID used to read the fan data.
SensorDisplayName = Flowcell				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
MinimumPPM = 0				;Minimum Pulses per minute for working fan.
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[IXTempProbe1]				;Settings for temperature sensor.
IxId = ix_temp_sensor_board0				;Sensor ID used to read the fan data.
SampleRateMs = 3000				;The temperature polling rate(ms)
AllowedNumOutOfRangeTemps = 100				;Number of times temperature may fall outside of standard operating range before warning displayed
TimeToReenableWarning = 60				;Time, in minutes, to re-enable out of range temperature warnings
LowerStandardOpTempC = 20				;Lower Standard Operating Temperature (˚C)
UpperStandardOpTempC = 28				;Lower Standard Operating Temperature (˚C)
LowerDangerOpTempC = 0				;Lower Standard Operating Temperature (˚C)
UpperDangerOpTempC = 50				;Lower Standard Operating Temperature (˚C)
ProbeErrorTempC = -377.17				;Lower Standard Operating Temperature (˚C)
SensorDisplayName = Board0				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
FlushAndWarn = False				;Flush device on Errors
AutoDetect = False				;If true software will try to scan COM ports and find device (all devices may not support this)
UsbPortApi = FTDI				;DotNetApi (only for 32-bit Win) / FTDI (x64)
OkIfNoUsbSerialPorts = False				;Okay if no USB serial devices are found
FTDIReadTimeoutMs = 5000				;FTDI read timeout: was 10, CyVera had to use 5000
FTDIWriteTimeoutMs = 0				;FTDI write timeout: was 500, CyVera had to use 0 because of an FTDI device driver bug which caused blue screens
FTDISetUSBParameters = True				;If true, call FTDISetUSBParameters() using CyVera's buffer sizes
FTDIRegisteringTimeoutSecs = 60				;FTDI registering timeout in seconds
FTDIResetPipeRetryCount = 1000				;Max # of times driver tries to reset pipe if error. Default = 50. Increase for noisy environments with many USB errors.
ComPortName = DefaultCOM				;Windows COMx port name, e.g. COM1
Handshake = None				;The control protocol used in establishing a serial port communication.
BaudRate = 115200				;Baud rate in bits per second. Up to 115200
ComPortOffset = 9				;The com position to start at. 0 = start at COM1, 9 = start at COM10, etc
PositionPollingInterval = 200				;PositionPollingInterval
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[IXTempProbe2]				;Settings for temperature sensor.
IxId = ix_temp_sensor_board1				;Sensor ID used to read the fan data.
SampleRateMs = 3000				;The temperature polling rate(ms)
AllowedNumOutOfRangeTemps = 100				;Number of times temperature may fall outside of standard operating range before warning displayed
TimeToReenableWarning = 60				;Time, in minutes, to re-enable out of range temperature warnings
LowerStandardOpTempC = 20				;Lower Standard Operating Temperature (˚C)
UpperStandardOpTempC = 28				;Lower Standard Operating Temperature (˚C)
LowerDangerOpTempC = 0				;Lower Standard Operating Temperature (˚C)
UpperDangerOpTempC = 50				;Lower Standard Operating Temperature (˚C)
ProbeErrorTempC = -377.17				;Lower Standard Operating Temperature (˚C)
SensorDisplayName = Board1				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
FlushAndWarn = False				;Flush device on Errors
AutoDetect = False				;If true software will try to scan COM ports and find device (all devices may not support this)
UsbPortApi = FTDI				;DotNetApi (only for 32-bit Win) / FTDI (x64)
OkIfNoUsbSerialPorts = False				;Okay if no USB serial devices are found
FTDIReadTimeoutMs = 5000				;FTDI read timeout: was 10, CyVera had to use 5000
FTDIWriteTimeoutMs = 0				;FTDI write timeout: was 500, CyVera had to use 0 because of an FTDI device driver bug which caused blue screens
FTDISetUSBParameters = True				;If true, call FTDISetUSBParameters() using CyVera's buffer sizes
FTDIRegisteringTimeoutSecs = 60				;FTDI registering timeout in seconds
FTDIResetPipeRetryCount = 1000				;Max # of times driver tries to reset pipe if error. Default = 50. Increase for noisy environments with many USB errors.
ComPortName = DefaultCOM				;Windows COMx port name, e.g. COM1
Handshake = None				;The control protocol used in establishing a serial port communication.
BaudRate = 115200				;Baud rate in bits per second. Up to 115200
ComPortOffset = 9				;The com position to start at. 0 = start at COM1, 9 = start at COM10, etc
PositionPollingInterval = 200				;PositionPollingInterval
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[IXTempProbe3]				;Settings for temperature sensor.
IxId = ix_temp_sensor_camera0				;Sensor ID used to read the fan data.
SampleRateMs = 3000				;The temperature polling rate(ms)
AllowedNumOutOfRangeTemps = 100				;Number of times temperature may fall outside of standard operating range before warning displayed
TimeToReenableWarning = 60				;Time, in minutes, to re-enable out of range temperature warnings
LowerStandardOpTempC = 20				;Lower Standard Operating Temperature (˚C)
UpperStandardOpTempC = 28				;Lower Standard Operating Temperature (˚C)
LowerDangerOpTempC = 0				;Lower Standard Operating Temperature (˚C)
UpperDangerOpTempC = 50				;Lower Standard Operating Temperature (˚C)
ProbeErrorTempC = -377.17				;Lower Standard Operating Temperature (˚C)
SensorDisplayName = Camera0				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
FlushAndWarn = False				;Flush device on Errors
AutoDetect = False				;If true software will try to scan COM ports and find device (all devices may not support this)
UsbPortApi = FTDI				;DotNetApi (only for 32-bit Win) / FTDI (x64)
OkIfNoUsbSerialPorts = False				;Okay if no USB serial devices are found
FTDIReadTimeoutMs = 5000				;FTDI read timeout: was 10, CyVera had to use 5000
FTDIWriteTimeoutMs = 0				;FTDI write timeout: was 500, CyVera had to use 0 because of an FTDI device driver bug which caused blue screens
FTDISetUSBParameters = True				;If true, call FTDISetUSBParameters() using CyVera's buffer sizes
FTDIRegisteringTimeoutSecs = 60				;FTDI registering timeout in seconds
FTDIResetPipeRetryCount = 1000				;Max # of times driver tries to reset pipe if error. Default = 50. Increase for noisy environments with many USB errors.
ComPortName = DefaultCOM				;Windows COMx port name, e.g. COM1
Handshake = None				;The control protocol used in establishing a serial port communication.
BaudRate = 115200				;Baud rate in bits per second. Up to 115200
ComPortOffset = 9				;The com position to start at. 0 = start at COM1, 9 = start at COM10, etc
PositionPollingInterval = 200				;PositionPollingInterval
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[IXTempProbe4]				;Settings for temperature sensor.
IxId = ix_temp_sensor_camera1				;Sensor ID used to read the fan data.
SampleRateMs = 3000				;The temperature polling rate(ms)
AllowedNumOutOfRangeTemps = 100				;Number of times temperature may fall outside of standard operating range before warning displayed
TimeToReenableWarning = 60				;Time, in minutes, to re-enable out of range temperature warnings
LowerStandardOpTempC = 20				;Lower Standard Operating Temperature (˚C)
UpperStandardOpTempC = 28				;Lower Standard Operating Temperature (˚C)
LowerDangerOpTempC = 0				;Lower Standard Operating Temperature (˚C)
UpperDangerOpTempC = 50				;Lower Standard Operating Temperature (˚C)
ProbeErrorTempC = -377.17				;Lower Standard Operating Temperature (˚C)
SensorDisplayName = Camera1				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
FlushAndWarn = False				;Flush device on Errors
AutoDetect = False				;If true software will try to scan COM ports and find device (all devices may not support this)
UsbPortApi = FTDI				;DotNetApi (only for 32-bit Win) / FTDI (x64)
OkIfNoUsbSerialPorts = False				;Okay if no USB serial devices are found
FTDIReadTimeoutMs = 5000				;FTDI read timeout: was 10, CyVera had to use 5000
FTDIWriteTimeoutMs = 0				;FTDI write timeout: was 500, CyVera had to use 0 because of an FTDI device driver bug which caused blue screens
FTDISetUSBParameters = True				;If true, call FTDISetUSBParameters() using CyVera's buffer sizes
FTDIRegisteringTimeoutSecs = 60				;FTDI registering timeout in seconds
FTDIResetPipeRetryCount = 1000				;Max # of times driver tries to reset pipe if error. Default = 50. Increase for noisy environments with many USB errors.
ComPortName = DefaultCOM				;Windows COMx port name, e.g. COM1
Handshake = None				;The control protocol used in establishing a serial port communication.
BaudRate = 115200				;Baud rate in bits per second. Up to 115200
ComPortOffset = 9				;The com position to start at. 0 = start at COM1, 9 = start at COM10, etc
PositionPollingInterval = 200				;PositionPollingInterval
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[IXTempProbe5]				;Settings for temperature sensor.
IxId = ix_temp_sensor_camera2				;Sensor ID used to read the fan data.
SampleRateMs = 3000				;The temperature polling rate(ms)
AllowedNumOutOfRangeTemps = 100				;Number of times temperature may fall outside of standard operating range before warning displayed
TimeToReenableWarning = 60				;Time, in minutes, to re-enable out of range temperature warnings
LowerStandardOpTempC = 20				;Lower Standard Operating Temperature (˚C)
UpperStandardOpTempC = 28				;Lower Standard Operating Temperature (˚C)
LowerDangerOpTempC = 0				;Lower Standard Operating Temperature (˚C)
UpperDangerOpTempC = 50				;Lower Standard Operating Temperature (˚C)
ProbeErrorTempC = -377.17				;Lower Standard Operating Temperature (˚C)
SensorDisplayName = Camera2				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
FlushAndWarn = False				;Flush device on Errors
AutoDetect = False				;If true software will try to scan COM ports and find device (all devices may not support this)
UsbPortApi = FTDI				;DotNetApi (only for 32-bit Win) / FTDI (x64)
OkIfNoUsbSerialPorts = False				;Okay if no USB serial devices are found
FTDIReadTimeoutMs = 5000				;FTDI read timeout: was 10, CyVera had to use 5000
FTDIWriteTimeoutMs = 0				;FTDI write timeout: was 500, CyVera had to use 0 because of an FTDI device driver bug which caused blue screens
FTDISetUSBParameters = True				;If true, call FTDISetUSBParameters() using CyVera's buffer sizes
FTDIRegisteringTimeoutSecs = 60				;FTDI registering timeout in seconds
FTDIResetPipeRetryCount = 1000				;Max # of times driver tries to reset pipe if error. Default = 50. Increase for noisy environments with many USB errors.
ComPortName = DefaultCOM				;Windows COMx port name, e.g. COM1
Handshake = None				;The control protocol used in establishing a serial port communication.
BaudRate = 115200				;Baud rate in bits per second. Up to 115200
ComPortOffset = 9				;The com position to start at. 0 = start at COM1, 9 = start at COM10, etc
PositionPollingInterval = 200				;PositionPollingInterval
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[IXTempProbe6]				;Settings for temperature sensor.
IxId = ix_temp_sensor_camera3				;Sensor ID used to read the fan data.
SampleRateMs = 3000				;The temperature polling rate(ms)
AllowedNumOutOfRangeTemps = 100				;Number of times temperature may fall outside of standard operating range before warning displayed
TimeToReenableWarning = 60				;Time, in minutes, to re-enable out of range temperature warnings
LowerStandardOpTempC = 20				;Lower Standard Operating Temperature (˚C)
UpperStandardOpTempC = 28				;Lower Standard Operating Temperature (˚C)
LowerDangerOpTempC = 0				;Lower Standard Operating Temperature (˚C)
UpperDangerOpTempC = 50				;Lower Standard Operating Temperature (˚C)
ProbeErrorTempC = -377.17				;Lower Standard Operating Temperature (˚C)
SensorDisplayName = Camera3				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
FlushAndWarn = False				;Flush device on Errors
AutoDetect = False				;If true software will try to scan COM ports and find device (all devices may not support this)
UsbPortApi = FTDI				;DotNetApi (only for 32-bit Win) / FTDI (x64)
OkIfNoUsbSerialPorts = False				;Okay if no USB serial devices are found
FTDIReadTimeoutMs = 5000				;FTDI read timeout: was 10, CyVera had to use 5000
FTDIWriteTimeoutMs = 0				;FTDI write timeout: was 500, CyVera had to use 0 because of an FTDI device driver bug which caused blue screens
FTDISetUSBParameters = True				;If true, call FTDISetUSBParameters() using CyVera's buffer sizes
FTDIRegisteringTimeoutSecs = 60				;FTDI registering timeout in seconds
FTDIResetPipeRetryCount = 1000				;Max # of times driver tries to reset pipe if error. Default = 50. Increase for noisy environments with many USB errors.
ComPortName = DefaultCOM				;Windows COMx port name, e.g. COM1
Handshake = None				;The control protocol used in establishing a serial port communication.
BaudRate = 115200				;Baud rate in bits per second. Up to 115200
ComPortOffset = 9				;The com position to start at. 0 = start at COM1, 9 = start at COM10, etc
PositionPollingInterval = 200				;PositionPollingInterval
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[IXTempProbe7]				;Settings for temperature sensor.
IxId = ix_temp_sensor_camera4				;Sensor ID used to read the fan data.
SampleRateMs = 3000				;The temperature polling rate(ms)
AllowedNumOutOfRangeTemps = 100				;Number of times temperature may fall outside of standard operating range before warning displayed
TimeToReenableWarning = 60				;Time, in minutes, to re-enable out of range temperature warnings
LowerStandardOpTempC = 20				;Lower Standard Operating Temperature (˚C)
UpperStandardOpTempC = 28				;Lower Standard Operating Temperature (˚C)
LowerDangerOpTempC = 0				;Lower Standard Operating Temperature (˚C)
UpperDangerOpTempC = 50				;Lower Standard Operating Temperature (˚C)
ProbeErrorTempC = -377.17				;Lower Standard Operating Temperature (˚C)
SensorDisplayName = Camera4				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
FlushAndWarn = False				;Flush device on Errors
AutoDetect = False				;If true software will try to scan COM ports and find device (all devices may not support this)
UsbPortApi = FTDI				;DotNetApi (only for 32-bit Win) / FTDI (x64)
OkIfNoUsbSerialPorts = False				;Okay if no USB serial devices are found
FTDIReadTimeoutMs = 5000				;FTDI read timeout: was 10, CyVera had to use 5000
FTDIWriteTimeoutMs = 0				;FTDI write timeout: was 500, CyVera had to use 0 because of an FTDI device driver bug which caused blue screens
FTDISetUSBParameters = True				;If true, call FTDISetUSBParameters() using CyVera's buffer sizes
FTDIRegisteringTimeoutSecs = 60				;FTDI registering timeout in seconds
FTDIResetPipeRetryCount = 1000				;Max # of times driver tries to reset pipe if error. Default = 50. Increase for noisy environments with many USB errors.
ComPortName = DefaultCOM				;Windows COMx port name, e.g. COM1
Handshake = None				;The control protocol used in establishing a serial port communication.
BaudRate = 115200				;Baud rate in bits per second. Up to 115200
ComPortOffset = 9				;The com position to start at. 0 = start at COM1, 9 = start at COM10, etc
PositionPollingInterval = 200				;PositionPollingInterval
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[IXTempProbe8]				;Settings for temperature sensor.
IxId = ix_temp_sensor_camera5				;Sensor ID used to read the fan data.
SampleRateMs = 3000				;The temperature polling rate(ms)
AllowedNumOutOfRangeTemps = 100				;Number of times temperature may fall outside of standard operating range before warning displayed
TimeToReenableWarning = 60				;Time, in minutes, to re-enable out of range temperature warnings
LowerStandardOpTempC = 20				;Lower Standard Operating Temperature (˚C)
UpperStandardOpTempC = 28				;Lower Standard Operating Temperature (˚C)
LowerDangerOpTempC = 0				;Lower Standard Operating Temperature (˚C)
UpperDangerOpTempC = 50				;Lower Standard Operating Temperature (˚C)
ProbeErrorTempC = -377.17				;Lower Standard Operating Temperature (˚C)
SensorDisplayName = Camera5				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
FlushAndWarn = False				;Flush device on Errors
AutoDetect = False				;If true software will try to scan COM ports and find device (all devices may not support this)
UsbPortApi = FTDI				;DotNetApi (only for 32-bit Win) / FTDI (x64)
OkIfNoUsbSerialPorts = False				;Okay if no USB serial devices are found
FTDIReadTimeoutMs = 5000				;FTDI read timeout: was 10, CyVera had to use 5000
FTDIWriteTimeoutMs = 0				;FTDI write timeout: was 500, CyVera had to use 0 because of an FTDI device driver bug which caused blue screens
FTDISetUSBParameters = True				;If true, call FTDISetUSBParameters() using CyVera's buffer sizes
FTDIRegisteringTimeoutSecs = 60				;FTDI registering timeout in seconds
FTDIResetPipeRetryCount = 1000				;Max # of times driver tries to reset pipe if error. Default = 50. Increase for noisy environments with many USB errors.
ComPortName = DefaultCOM				;Windows COMx port name, e.g. COM1
Handshake = None				;The control protocol used in establishing a serial port communication.
BaudRate = 115200				;Baud rate in bits per second. Up to 115200
ComPortOffset = 9				;The com position to start at. 0 = start at COM1, 9 = start at COM10, etc
PositionPollingInterval = 200				;PositionPollingInterval
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[IXTempProbe9]				;Settings for temperature sensor.
IxId = ix_temp_sensor_thermocouple0				;Sensor ID used to read the fan data.
SampleRateMs = 3000				;The temperature polling rate(ms)
AllowedNumOutOfRangeTemps = 100				;Number of times temperature may fall outside of standard operating range before warning displayed
TimeToReenableWarning = 60				;Time, in minutes, to re-enable out of range temperature warnings
LowerStandardOpTempC = 20				;Lower Standard Operating Temperature (˚C)
UpperStandardOpTempC = 28				;Lower Standard Operating Temperature (˚C)
LowerDangerOpTempC = 0				;Lower Standard Operating Temperature (˚C)
UpperDangerOpTempC = 50				;Lower Standard Operating Temperature (˚C)
ProbeErrorTempC = -377.17				;Lower Standard Operating Temperature (˚C)
SensorDisplayName = ThermoCouple_Side				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
FlushAndWarn = False				;Flush device on Errors
AutoDetect = False				;If true software will try to scan COM ports and find device (all devices may not support this)
UsbPortApi = FTDI				;DotNetApi (only for 32-bit Win) / FTDI (x64)
OkIfNoUsbSerialPorts = False				;Okay if no USB serial devices are found
FTDIReadTimeoutMs = 5000				;FTDI read timeout: was 10, CyVera had to use 5000
FTDIWriteTimeoutMs = 0				;FTDI write timeout: was 500, CyVera had to use 0 because of an FTDI device driver bug which caused blue screens
FTDISetUSBParameters = True				;If true, call FTDISetUSBParameters() using CyVera's buffer sizes
FTDIRegisteringTimeoutSecs = 60				;FTDI registering timeout in seconds
FTDIResetPipeRetryCount = 1000				;Max # of times driver tries to reset pipe if error. Default = 50. Increase for noisy environments with many USB errors.
ComPortName = DefaultCOM				;Windows COMx port name, e.g. COM1
Handshake = None				;The control protocol used in establishing a serial port communication.
BaudRate = 115200				;Baud rate in bits per second. Up to 115200
ComPortOffset = 9				;The com position to start at. 0 = start at COM1, 9 = start at COM10, etc
PositionPollingInterval = 200				;PositionPollingInterval
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

[IXTempProbe10]				;Settings for temperature sensor.
IxId = ix_temp_sensor_thermocouple1				;Sensor ID used to read the fan data.
SampleRateMs = 3000				;The temperature polling rate(ms)
AllowedNumOutOfRangeTemps = 100				;Number of times temperature may fall outside of standard operating range before warning displayed
TimeToReenableWarning = 60				;Time, in minutes, to re-enable out of range temperature warnings
LowerStandardOpTempC = 20				;Lower Standard Operating Temperature (˚C)
UpperStandardOpTempC = 28				;Lower Standard Operating Temperature (˚C)
LowerDangerOpTempC = 0				;Lower Standard Operating Temperature (˚C)
UpperDangerOpTempC = 50				;Lower Standard Operating Temperature (˚C)
ProbeErrorTempC = -377.17				;Lower Standard Operating Temperature (˚C)
SensorDisplayName = ThermoCouple_Rear				;Name of sensor to appear in the UI
DisplayInSensorUI = True				;If true will display the sensor in the UI.
FlushAndWarn = False				;Flush device on Errors
AutoDetect = False				;If true software will try to scan COM ports and find device (all devices may not support this)
UsbPortApi = FTDI				;DotNetApi (only for 32-bit Win) / FTDI (x64)
OkIfNoUsbSerialPorts = False				;Okay if no USB serial devices are found
FTDIReadTimeoutMs = 5000				;FTDI read timeout: was 10, CyVera had to use 5000
FTDIWriteTimeoutMs = 0				;FTDI write timeout: was 500, CyVera had to use 0 because of an FTDI device driver bug which caused blue screens
FTDISetUSBParameters = True				;If true, call FTDISetUSBParameters() using CyVera's buffer sizes
FTDIRegisteringTimeoutSecs = 60				;FTDI registering timeout in seconds
FTDIResetPipeRetryCount = 1000				;Max # of times driver tries to reset pipe if error. Default = 50. Increase for noisy environments with many USB errors.
ComPortName = DefaultCOM				;Windows COMx port name, e.g. COM1
Handshake = None				;The control protocol used in establishing a serial port communication.
BaudRate = 115200				;Baud rate in bits per second. Up to 115200
ComPortOffset = 9				;The com position to start at. 0 = start at COM1, 9 = start at COM10, etc
PositionPollingInterval = 200				;PositionPollingInterval
Simulated = Auto				;Whether or not the device is simulated in this instrument configuration. If set to Auto, the device defaults to the [Instrument]'s simulated tag. The Auto option for the [Instrument] is equivalent to NotSimulated.
TraceLevel = 1				;Controls how much information about this device gets logged. Higher numbers cause more logging:  0 = only log initialization information such as device name, port, simulated or not, etc.  1 = log generally useful information, such as all communications (except polling) and moves.  2 or higher = log more detailed information if available

