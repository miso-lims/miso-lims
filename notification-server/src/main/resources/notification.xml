<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2012. The Genome Analysis Centre, Norwich, UK
  ~ MISO project contacts: Robert Davey, Mario Caccamo @ TGAC
  ~ **********************************************************************
  ~
  ~ This file is part of MISO.
  ~
  ~ MISO is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ MISO is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with MISO.  If not, see <http://www.gnu.org/licenses/>.
  ~
  ~ **********************************************************************
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:integration="http://www.springframework.org/schema/integration"
       xmlns:ip="http://www.springframework.org/schema/integration/ip"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/tx spring-tx-2.5.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd
       http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd http://www.springframework.org/schema/integration/ip http://www.springframework.org/schema/integration/ip/spring-integration-ip.xsd">

  <bean id="applicationContextProvider" name="applicationContextProvider" class="uk.ac.bbsrc.tgac.miso.integration.context.ApplicationContextProvider"/>

  <integration:annotation-config/>
  <tx:annotation-driven/>

<!-- notification request server -->
  <bean name="notificationRequestManager" class="uk.ac.bbsrc.tgac.miso.notification.manager.NotificationRequestManager"/>

  <bean name="notificationRequestService" class="uk.ac.bbsrc.tgac.miso.notification.service.NotificationRequestService">
    <property name="notificationRequestManager" ref="notificationRequestManager"/>
  </bean>

  <integration:channel id="serviceChannel"/>
  <integration:channel id="responseChannel"/>

  <bean id="tcpSerializer" class="org.springframework.integration.ip.tcp.serializer.ByteArrayCrLfSerializer">
    <property name="maxMessageSize" value="20480"/>
  </bean>

  <bean id="tcpDeserializer" class="org.springframework.integration.ip.tcp.serializer.ByteArrayCrLfSerializer">
    <property name="maxMessageSize" value="20480"/>
  </bean>

  <ip:tcp-connection-factory id="notificationRequestServer"
                             type="server"
                             port="8787"
                             using-nio="false"
                             single-use="true"
                             deserializer="tcpDeserializer"/>

  <ip:tcp-inbound-gateway id="requestGateway"
                          connection-factory="notificationRequestServer"
                          request-channel="serverBytes2StringChannel"
                          reply-channel="responseChannel"
                          error-channel="errorChannel"/>

  <integration:transformer id="serverBytes2String"
                           input-channel="serverBytes2StringChannel"
                           output-channel="serviceChannel"
                           ref="notificationRequestService"
                           method="transformPayload"/>

  <integration:service-activator id="notificationServiceActivator"
                                 input-channel="serviceChannel"
                                 ref="notificationRequestService"
                                 method="processRequest"/>

  <ip:tcp-connection-factory id="client"
                type="client"
                host="localhost"
                port="7899"
                so-timeout="10000"/>
<!--single-use="true" -->

        <ip:tcp-outbound-gateway id="outGateway"
                request-channel="responseChannel"
                reply-channel="clientBytes2StringChannel"
                connection-factory="client"
                request-timeout="10000"
                reply-timeout="10000"
                />
        <integration:transformer id="clientBytes2String"
                input-channel="clientBytes2StringChannel"
                expression="new String(payload)"/>


<!-- full notification polling stuff -->
  <integration:channel id="wireTapChannel"/>

  <!-- UTILS -->
  <bean id="illuminaTransformer" class="uk.ac.bbsrc.tgac.miso.notification.service.IlluminaTransformer"/>
  <integration:channel id="illuminaSplitterChannel"/>

  <bean id="solidTransformer" class="uk.ac.bbsrc.tgac.miso.notification.service.SolidTransformer"/>
  <integration:channel id="solidSplitterChannel"/>

  <bean id="ls454Transformer" class="uk.ac.bbsrc.tgac.miso.notification.service.LS454Transformer"/>
  <integration:channel id="ls454SplitterChannel"/>

  <bean id="pacbioTransformer" class="uk.ac.bbsrc.tgac.miso.notification.service.PacBioTransformer"/>
  <integration:channel id="pacbioSplitterChannel"/>

  <bean id="statusFilter" class="org.springframework.integration.file.filters.CompositeFileListFilter">
    <constructor-arg>
      <list>
        <bean class="org.springframework.integration.file.filters.AcceptAllFileListFilter"/>
      </list>
    </constructor-arg>
  </bean>

  <!-- ILLUMINA STATUS -->
  <integration:channel id="illuminaStatusFileInputChannel"/>
  <integration:channel id="illuminaStatusTransformerChannel"/>
  <integration:channel id="illuminaStatusChannel"/>
  <integration:channel id="illuminaMessageSignerChannel"/>

  <bean id="illuminaStatusRecursiveScanner" class="uk.ac.bbsrc.tgac.miso.tools.run.RunFolderScanner">
    <constructor-arg index="0">
      <util:constant static-field="uk.ac.bbsrc.tgac.miso.tools.run.RunFolderConstants.ILLUMINA_FOLDER_REGEX"/>
    </constructor-arg>
  </bean>

  <integration:transformer id="illuminaStatusTransformer" ref="illuminaTransformer"
                           input-channel="illuminaStatusFileInputChannel"
                           output-channel="illuminaSplitterChannel"
                           method="transform">
  </integration:transformer>

  <!-- SOLID STATUS -->
  <integration:channel id="solidStatusFileInputChannel"/>
  <integration:channel id="solidStatusWebServiceChannel"/>
  <integration:channel id="solidStatusTransformerChannel"/>
  <integration:channel id="solidStatusChannel"/>
  <integration:channel id="solidMessageSignerChannel"/>

  <bean id="solidStatusRecursiveScanner" class="uk.ac.bbsrc.tgac.miso.tools.run.RunFolderScanner">
    <constructor-arg index="0">
      <util:constant static-field="uk.ac.bbsrc.tgac.miso.tools.run.RunFolderConstants.SOLID_FOLDER_REGEX"/>
    </constructor-arg>
  </bean>

  <integration:transformer id="solidStatusTransformer"
                           ref="solidTransformer" method="transform"
                           input-channel="solidStatusFileInputChannel"
                           output-channel="solidMessageSignerChannel">
  </integration:transformer>

  <!-- 454 STATUS -->
  <integration:channel id="ls454StatusFileInputChannel"/>
  <integration:channel id="ls454StatusTransformerChannel"/>
  <integration:channel id="ls454StatusChannel"/>
  <integration:channel id="ls454MessageSignerChannel"/>

  <bean id="ls454StatusRecursiveScanner" class="uk.ac.bbsrc.tgac.miso.tools.run.RunFolderScanner">
    <constructor-arg index="0">
      <util:constant static-field="uk.ac.bbsrc.tgac.miso.tools.run.RunFolderConstants.LS454_FOLDER_REGEX"/>
    </constructor-arg>
  </bean>

  <integration:transformer id="ls454StatusTransformer" ref="ls454Transformer"
                           input-channel="ls454StatusFileInputChannel"
                           output-channel="ls454MessageSignerChannel"
                           method="transform">
  </integration:transformer>

  <!-- PACBIO STATUS -->
  <bean id="pacbioStatusFilter" class="org.springframework.integration.file.filters.CompositeFileListFilter">
    <constructor-arg>
      <list>
        <bean class="org.springframework.integration.file.filters.AcceptOnceFileListFilter"/>
      </list>
    </constructor-arg>
  </bean>

  <integration:channel id="pacbioStatusFileInputChannel"/>
  <integration:channel id="pacbioStatusTransformerChannel"/>
  <integration:channel id="pacbioStatusChannel"/>
  <integration:channel id="pacbioMessageSignerChannel"/>

  <bean id="pacbioStatusRecursiveScanner" class="uk.ac.bbsrc.tgac.miso.tools.run.RunFolderScanner">
    <constructor-arg index="0">
      <util:constant static-field="uk.ac.bbsrc.tgac.miso.tools.run.RunFolderConstants.PACBIO_FOLDER_REGEX"/>
    </constructor-arg>
  </bean>

  <integration:transformer id="pacbioStatusTransformer" ref="pacbioTransformer"
                           input-channel="pacbioStatusFileInputChannel"
                           output-channel="pacbioSplitterChannel"
                           method="transform">
  </integration:transformer>

  <!-- SPRING BATCH SETUP -->
  <!--
  <integration:channel id="illuminaStatusBatchChannel"/>

  <jdbc:embedded-database id="dataSource" type="H2">
      <jdbc:script location="classpath:/org/springframework/batch/core/schema-h2.sql"/>
  </jdbc:embedded-database>

  <batch:job-repository id="jobRepository"/>

  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      <constructor-arg ref="dataSource"/>
  </bean>

  <bean id="batchTaskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
      <property name="corePoolSize" value="5"/>
      <property name="threadGroup" value="nThreads"/>
  </bean>

  <bean id="jobRegistry" class="org.springframework.batch.core.configuration.support.MapJobRegistry"/>
  <bean class="org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor">
      <property name="jobRegistry" ref="jobRegistry"/>
  </bean>

  <bean id="jobLauncher" class="uk.ac.bbsrc.tgac.miso.notification.core.batch.NotificationJobLauncher">
      <property name="jobRepository" ref="jobRepository"/>
      <property name="taskExecutor" ref="batchTaskExecutor"/>
  </bean>

  <bean id="launchHandler" class="uk.ac.bbsrc.tgac.miso.notification.core.batch.JobLaunchingHandler">
      <constructor-arg ref="jobRegistry"/>
      <constructor-arg ref="jobLauncher"/>
  </bean>

  <bean id="jobLoader" class="org.springframework.batch.core.configuration.support.DefaultJobLoader">
      <property name="jobRegistry" ref="jobRegistry"/>
  </bean>
  -->
</beans>