###########################################################################################
##
##  This is an example file, and should not be modified inside the source package. Copy 
##  it elsewhere and modify it for use when running migration.
##
###########################################################################################
## MIGRATION TARGET PARAMETERS
#

# MISO user to attribute object creation to (must already exist in the MISO database)
target.miso.user=migration

# Database access
target.db.host=your.database.server
target.db.port=3306
target.db.name=dbName
target.db.user=username
target.db.pass=password

# NOTE: Naming schemes are not yet configurable here. This is informational only.
# Naming schemes: OicrSampleNamingScheme, SimpleLibraryNamingScheme, DefaultEntityNamingScheme
# Name generators: OicrSampleAliasGenerator
# Barcodes: NOT auto-generated

# If true, migration will continue even some samples fail to save. Currently only affects
# samples - migration will still fail if anything else fails to save
target.tolerateErrors=false

# Run through migration entirely, but roll back the database after it completes
target.dryrun=false

# Replace database-generated changelogs with changelogs in migration data for sample,
# libraries, and library dilutions. If this is true, migrating samples, libraries, and
# dilutions MUST include non-empty changelogs
target.replaceChangeLogs=false

# Controls behaviour when a migrating run is being merged with an existing run and both
# have pools for the same partition number. If set to true, the pools will be merged. If
# false, an error is thrown
target.mergeRunPools=false


###########################################################################################
## LOAD GENERATOR SETTINGS
#

# Leave uncommented and unchanged to use this source. Generates bulk data for load testing
source=load-generator

# Total number of projects to create
source.load-generator.projectCount=10
# Total number of samples to create (will be divided between the projects)
source.load-generator.sampleCount=10000
# Total number of libraries to create (will be divided between the samples)
# This has a limit of 999999 due to naming scheme restrictions
source.load-generator.libraryCount=10000
# Total number of pools to create
source.load-generator.poolCount=10000
# Number of libraries to include in each pool
source.load-generator.poolSize=5
# Number of runs to create
source.load-generator.runCount=300
# Number of lanes to add to each flowcell. Each lane will have a pool added to it
source.load-generator.runSize=8

# IDs required for creating hierarchy of samples. These entities must exist in the database
source.load-generator.rootSampleClassId=1
source.load-generator.tissueSampleClassId=2
source.load-generator.stockSampleClassId=11
source.load-generator.aliquotSampleClassId=15

# All samples will have the same TissueOrigin and TissueType
source.load-generator.tissueOriginId=1
source.load-generator.tissueTypeId=1

# All libraries will have the same LibraryType, SelectionType and StrategyType
source.load-generator.libraryTypeId=1
source.load-generator.librarySelectionTypeId=1
source.load-generator.libraryStrategyTypeId=1

# All runs will be linked to the same sequencer
source.load-generator.runSequencerId=1
source.load-generator.containerModelId=1
